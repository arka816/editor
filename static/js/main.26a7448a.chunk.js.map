{"version":3,"sources":["Editor/engine sync /^/.*/tokenizer/.js$","Editor/engine/c/tokenizer.js","Editor/state/state.js","Editor/components/linemarker.js","Editor/components/codespan.js","Editor/components/codeline.js","Editor/components/codeinput.js","Editor/components/textsearch.js","Editor/editor.js","Editor/container.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","datatypes","qualifiers","keywords","operators","punctuators","preprocessor_directives","libraryFunctions","tokens","cleanseTokens","i","length","splice","classify","indentedTokens","q","Math","floor","r","j","push","classifyToken","trim","indexOf","originalChar","slice","isChar","n","isNaN","parseFloat","substring","match","includes","tokenize","string","c","stringMode","charMode","symbolMode","commentMode","currentToken","Container","createContainer","useState","tabWidth","setTabWidth","lineHeight","setLineHeight","lineCount","setLineCount","contentArray","setContentArray","tokenArray","setTokenArray","cursorLine","setCursorLine","cursorIndex","setCursorIndex","cursorOffset","setCursorOffset","LineMarker","number","isContractible","isContracted","Store","useContainer","bgColor","className","style","height","backgroundColor","marginRight","color","CodeSpan","category","line","index","replaceAll","type","qualifier","keyword","operator","punctuator","escapeseq","error","identifier","string_literal","char_literal","numeric_literal","single_line_comment","multi_line_comment","multi_line_comment_start","multi_line_comment_end","indentation_guide_1","indentation_guide_2","lib_func","preproc_dir","findWidthofChar","elem","document","getElementById","innerText","getBoundingClientRect","width","data-index","contentEditable","spellCheck","fontStyle","onClick","x","offsetX","nativeEvent","clientX","target","left","stopPropagation","preventDefault","l","reduce","a","b","Array","isArray","w","focus","suppressContentEditableWarning","Codeline","data-line","top","value","language","localStorage","getItem","tokenizer","require","dualPunctuators","dualPunctuatorsCounterpart","CodeInput","setStringMode","setCharMode","lastIndex","setLastIndex","lastMovement","setLastMovement","updateStorage","setItem","JSON","stringify","insertNewLine","content","deleteLine","keyHandler","key","keyCode","charCode","prev_content","next_content","s","repeat","min","autoFocus","wrap","autoCapitalize","autoCorrect","onInput","textarea","newChar","counterPunctuator","onKeyDown","onPaste","lines","clipboardData","window","getData","split","TextSearch","setFindMode","search","highlights","getElementsByClassName","remove","canvas","display","ctx","getContext","clearRect","searchString","locations","startIndex","indices","beginPath","lineWidth","strokeStyle","codeline","moveTo","lineTo","stroke","span","createElement","classList","add","appendChild","placeholder","position","right","objectToArray","p","sort","arr","initiateState","from","_","parse","Editor","findMode","useEffect","clearSelection","x1","y1","x2","y2","c1","c2","copyToClipboard","selection","getSelection","toString","anchor_line","parseInt","anchorNode","parentElement","dataset","anchor_index","anchor_offset","anchorOffset","focus_line","focusNode","focus_index","focus_offset","focusOffset","copiedText","anchor_content_index","focus_content_index","setData","val","onCopy","onCut","empty","removeAllRanges","ctrlKey","codeString","filename","trimRight","codeBlob","Blob","url","URL","createObjectURL","href","download","body","click","removeChild","downloadFile","removeItem","console","log","Wrapper","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.26a7448a.chunk.js","sourcesContent":["var map = {\n\t\"./c/tokenizer.js\": 30\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","const datatypes = [\"int\", \"float\", \"double\", \"char\", \"auto\", \"void\"];\r\nconst qualifiers = [\"long\", \"short\", \"signed\", \"unsigned\"];\r\nconst keywords = [\"for\", \"if\", \"else\", \"switch\", \"return\", \"goto\", \"register\", \"do\", \"while\", \"break\", \"continue\", \"struct\", \"enum\", \"union\", \"static\", \"case\", \"default\", \"sizeof\", \"typedef\", \"volatile\", \"extern\"];\r\nconst operators = [\"+\", \"-\", \"*\", \"/\", \"%\", \"=\", \"==\", \"++\", \"--\", \"+=\", \"-=\", \"*=\", \"/=\", \">\", \"<\", \">=\", \"<=\", \"!=\", \">>\", \"<<\", \">>=\", \"<<=\", \"~\", \"!\", \"&\", \"|\", \"^\", \"&=\", \"|=\", \"^=\", \"~=\", \"?\", \":\", \"&&\", \"||\"];\r\nconst punctuators = [\",\", \".\", \";\", \"->\", \"#\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"...\", \"\\\"\", \"'\"];\r\nconst preprocessor_directives = ['define', 'include', 'undef', 'ifdef', 'ifndef', 'if', 'else', 'elif', 'endif', 'error', 'pragma'];\r\n//const escapeseq = [\"\\n\", \"\\r\", \"\\t\", \"\\b\", \"\\\\a\", \"\\\\'\", \"\\\"\", \"\\\\?\", \"\\\\\", \"\\f\", \"\\\\v\", \"\\\\0\", \"\\\\nnn\", \"\\\\xhh\"];\r\n//const comments = [\"//\", \"*/\", \"/*\"];\r\nconst libraryFunctions = [\"printf\", \"scanf\", \"\"]\r\n\r\nvar tokens = [];\r\n\r\nconst isNumeric = (n) => {\r\n    if (typeof n != \"string\") return false;\r\n    return !isNaN(n) && !isNaN(parseFloat(n));\r\n}\r\n\r\nconst isChar = (code) => {\r\n    //needs revision\r\n    let originalChar = code.slice(1, -1);\r\n    if(originalChar.length > 1){\r\n        if(originalChar.length === 2 && originalChar[0] === \"\\\\\") return true;\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst checkIdentifier = (token) => {\r\n    var alphanumericRegExp = /^[0-9a-zA-Z_]+$/;\r\n    return token.match(alphanumericRegExp);\r\n}\r\n\r\nconst cleanseTokens = () => {\r\n    for(let i = 0; i < tokens.length; i++){\r\n        if(tokens[i] === \"\") tokens.splice(i, 1);\r\n    }\r\n}\r\n\r\nconst classify = () => {\r\n    var indentedTokens = []\r\n    var i = 0;\r\n    while(i < tokens.length && tokens[i] === \" \"){\r\n        i++;\r\n    }\r\n    \r\n    let q = Math.floor(i/4);\r\n    let r = i % 4;\r\n\r\n    if(q > 0){\r\n        for(let j = 0; j < q - 1; j++) indentedTokens.push([\"    \", \"indentation_guide_1\"])\r\n        if(r === 0) indentedTokens.push([\"    \", \"indentation_guide_2\"])\r\n        else indentedTokens.push([\"    \", \"indentation_guide_1\"])\r\n    }\r\n    \r\n    for(let i = 4*q; i < tokens.length; i++){\r\n        indentedTokens.push([tokens[i], classifyToken(tokens[i])]);\r\n    }\r\n    tokens = indentedTokens;\r\n}\r\n\r\nconst classifyToken = (code) => {\r\n    code = code.trim();\r\n    if(code === \"\") return \"space\";\r\n    else{\r\n        if(datatypes.indexOf(code) !== -1) return \"type\";\r\n        else if(qualifiers.indexOf(code) !== -1) return \"qualifier\";\r\n        else if(keywords.indexOf(code) !== -1) return \"keyword\";\r\n        else if(code[0] === \"\\\"\") return \"string_literal\";\r\n        else if (code[0] === \"'\") return (isChar(code) ? \"char_literal\" : \"error\");\r\n        else if(isNumeric(code)) return \"numeric_literal\";\r\n        else{\r\n            //symbols or identifiers\r\n            if(operators.indexOf(code) !== -1) return \"operator\";\r\n            if(punctuators.indexOf(code) !== -1){\r\n                if(code === '#') return 'operator';\r\n                else return \"punctuator\";\r\n            }\r\n            \r\n            if(code.substring(0, 2) === \"//\") return \"single_line_comment\";\r\n            else if(code.substring(0, 2) === \"/*\"){\r\n                if(code.substring(code.length - 2) === \"*/\") return \"multi_line_comment\";\r\n                else return \"multi_line_comment_start\";\r\n            }\r\n            else if(code.substring(code.length - 2, 2) === \"*/\") return \"multi_line_comment_end\";\r\n\r\n            if(checkIdentifier(code)){\r\n                if(libraryFunctions.includes(code)) return \"lib_func\";\r\n                else if(preprocessor_directives.includes(code)) return \"preproc_dir\";\r\n                return \"identifier\";\r\n            }\r\n            else{\r\n                return \"error\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst tokenize = (string) => {\r\n    tokens = [];\r\n    var stringMode = false;\r\n    var charMode = false;\r\n    var symbolMode = false;\r\n    var commentMode = false;\r\n    var currentToken = \"\";\r\n    var c;\r\n\r\n    for(let i = 0; i < string.length; i++){\r\n        c = string[i];\r\n        if(commentMode){\r\n            //part of a multiline comment\r\n            currentToken += c;\r\n            if(c === \"/\" && i > 0 && string[i-1] === \"*\"){\r\n                //multi line comment ended\r\n                commentMode = false;\r\n                tokens[tokens.length - 1] += currentToken;\r\n                currentToken = \"\";\r\n            }\r\n        }\r\n        else{\r\n            if(c >= 'a' && c <= 'z'){\r\n                //identifier or datatype or qualifier or keyword\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"_\"){\r\n                //string or character or identifier\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c >= 'A' && c <= 'Z'){\r\n                //identifier\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c >= '0' && c <= '9'){\r\n                //identifier or numeric\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \" \"){\r\n                if(!stringMode && !charMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                    tokens.push(\" \");\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === '\"'){\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(i > 0 && string[i-1] !== \"\\\\\"){\r\n                    if(!stringMode){\r\n                        //string is starting\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\\\"\";\r\n                    }\r\n                    else{\r\n                        //string is ending\r\n                        currentToken += c;\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\";\r\n                    }\r\n                    stringMode = !stringMode;\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"'\"){\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(i > 0 && string[i-1] !== \"\\\\\"){\r\n                    if(!charMode){\r\n                        //character is starting\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"'\";\r\n                    }\r\n                    else{\r\n                        //character is ending\r\n                        currentToken += c;\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\";\r\n                    }\r\n                    charMode = !charMode;\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(punctuators.includes(c)){\r\n                //valid punctuator\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(!stringMode && !charMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                    tokens.push(c);\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"\\\\\"){\r\n                currentToken += c;\r\n            }\r\n            else{\r\n                //symbols\r\n                if(operators.includes(c)){\r\n                    //valid operator symbol\r\n                    if(stringMode || charMode){\r\n                        //part of a string\r\n                        currentToken += c;\r\n                    }\r\n                    else{\r\n                        //not part of string or character\r\n                        //which means it is an individual symbol\r\n                        //or part of the previous symbol if any\r\n                        if(c === \"/\" && i > 0 && string[i-1] === \"/\"){\r\n                            //single line comment started\r\n                            //\r\n                            tokens[tokens.length - 1] += \"/\" + string.substring(i);\r\n                            cleanseTokens();\r\n                            classify();\r\n                            return tokens;\r\n                        }\r\n                        if(c === \"*\" && i > 0 && string[i-1] === \"/\"){\r\n                            //mutliline comment started\r\n                            currentToken += c;\r\n                            commentMode = true;\r\n                        }\r\n                        if(!commentMode){\r\n                            if(symbolMode){\r\n                                //last character was symbol too\r\n                                currentToken += c;\r\n                            }\r\n                            else{\r\n                                //last character was not symbol\r\n                                tokens.push(currentToken);\r\n                                currentToken = c;\r\n                            }\r\n                            symbolMode = true;\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(stringMode || charMode){\r\n                        //part of string\r\n                        //so no problem\r\n                    }\r\n                    else{\r\n                        tokens.push(currentToken);\r\n                        tokens.push(c);\r\n                        currentToken = \"\";\r\n                    }\r\n                    symbolMode = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    tokens.push(currentToken);\r\n    cleanseTokens();\r\n    classify();\r\n    return tokens;\r\n}\r\n\r\nmodule.exports = {tokenize};","import {useState} from 'react';\r\nimport { createContainer } from \"unstated-next\";\r\n\r\nfunction useStore(){\r\n\tconst [tabWidth, setTabWidth] = useState(4);\r\n    const [lineHeight, setLineHeight] = useState(20);\r\n    const [lineCount, setLineCount] = useState(30);\r\n    const [contentArray, setContentArray] = useState(null);\r\n    const [tokenArray, setTokenArray] = useState(null);\r\n    const [cursorLine, setCursorLine] = useState(0);\r\n    const [cursorIndex, setCursorIndex] = useState(0);\r\n    const [cursorOffset, setCursorOffset] = useState(0);\r\n\r\n    return {tabWidth, setTabWidth, lineHeight, setLineHeight, lineCount, setLineCount, cursorOffset, setCursorOffset, contentArray, setContentArray, tokenArray, setTokenArray, cursorLine, setCursorLine, cursorIndex, setCursorIndex};\r\n}\r\n\r\nlet Container = createContainer(useStore);\r\n\r\nexport default Container;","import React from 'react';\r\nimport Container from '../state/state.js';\r\n\r\nconst LineMarker = ({number, isContractible, isContracted}) => {\r\n    const Store = Container.useContainer();\r\n    var bgColor = Store.cursorLine === number ? \"#272727\" : \"#2F3129\";\r\n    return (\r\n        <div className=\"editor_line_marker\" \r\n            style={{height: Store.lineHeight + \"px\", backgroundColor: bgColor}}\r\n        >\r\n            <span style={{marginRight: \"5px\"}}>{number + 1}</span>\r\n            {isContractible ? \r\n                <i className=\"fa fa-caret-down\" style={isContracted ? {color: \"white\"} : {color: \"gray\"}}></i> \r\n                : <i></i>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineMarker;","import React from 'react';\r\nimport Container from '../state/state.js';\r\n\r\nconst CodeSpan = ({code, category, line, index}) => {\r\n    const Store = Container.useContainer();\r\n    code = code.replaceAll(\" \", \"\\u00a0\");\r\n    var colorCode = {\r\n        type: \"#5CD9EF\",\r\n        qualifier: \"#5CD9EF\",\r\n        keyword: \"#F92665\",\r\n        operator: \"#F92665\",\r\n        punctuator: \"#FFFFFF\",\r\n        escapeseq: \"#7C75FF\",\r\n        error: \"#FFFFFF\",\r\n        identifier: \"#FFFFFF\",\r\n        string_literal: \"#E6DB74\",\r\n        char_literal: \"#E6DB74\",\r\n        numeric_literal: \"#7C75FF\",\r\n        single_line_comment: \"#1e9104\",\r\n        multi_line_comment: \"#1e9104\",\r\n        multi_line_comment_start: \"#1e9104\",\r\n        multi_line_comment_end: \"#1e9104\",\r\n        indentation_guide_1: \"transparent\",\r\n        indentation_guide_2: \"transparent\",\r\n        lib_func: \"#66D9E2\",\r\n        preproc_dir: '#F92665'\r\n    };\r\n\r\n    var color = colorCode[category];\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        var x = e.offsetX || e.nativeEvent.offsetX;\r\n        x = e.clientX - e.target.getBoundingClientRect().left;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        Store.setCursorLine(line);\r\n        var l = Store.tokenArray[line].slice(0, index).reduce(function(a, b){\r\n            if(Array.isArray(a)) return a[0].length + b[0].length;\r\n            return a + b[0].length\r\n        }, 0);\r\n        var w = 0;\r\n        var i = 0;\r\n        for(i = 0; i < code.length; i++){\r\n            w += findWidthofChar(code[i]);\r\n            if(w > x){\r\n                if((w-x) < (x - w + findWidthofChar(code[i]))) i = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        Store.setCursorIndex(l + i);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[line].slice(0, l + i)))\r\n        document.getElementById(\"edit_textarea\").focus();\r\n    }\r\n    \r\n    return (\r\n        <span \r\n            data-index={index}\r\n            contentEditable=\"false\" \r\n            spellCheck=\"false\"\r\n            className={category === \"indentation_guide_1\" ? \"editor_code_span editor_code_span_indentation\" : \"editor_code_span\"}\r\n            style={{color: color, fontStyle: category === \"type\" || category === \"qualifier\" ? \"italic\" : \"normal\"}}\r\n            onClick = {handleChange}\r\n            suppressContentEditableWarning={true}\r\n        >\r\n            {code}\r\n        </span>    \r\n    )\r\n}\r\n\r\nexport default CodeSpan;","import React from 'react';\r\nimport CodeSpan from \"./codespan\";\r\nimport Container from '../state/state.js';\r\n\r\nconst Codeline = ({line}) => {\r\n    const Store = Container.useContainer();\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n    const focusLine = () => {\r\n        Store.setCursorLine(line);\r\n        Store.setCursorIndex(Store.contentArray[line].length);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[line]));\r\n        document.getElementById(\"edit_textarea\").focus();\r\n    }\r\n    return (\r\n        <div \r\n            data-line={line}\r\n            id={\"editor_code_line_\" + line}\r\n            className=\"editor_code_line\" \r\n            style={{height: Store.lineHeight + \"px\", backgroundColor: line === Store.cursorLine ? \"#202020\" : \"#272822\", top: (Store.lineHeight * (line)) + \"px\"}}\r\n            onClick={focusLine}\r\n        >\r\n            {\r\n                Store.tokenArray === null ? \"\" : \r\n                Store.tokenArray[line].map((value, index) => (\r\n                    <CodeSpan \r\n                        key={index}\r\n                        index={index}\r\n                        code={value[0]}\r\n                        category={value[1]}\r\n                        line={line}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Codeline;","import React, {useState} from 'react';\r\nimport Container from '../state/state.js';\r\nvar language = localStorage.getItem(\"language\") || 'c';\r\nconst tokenizer = require(\"../engine/\" + language + \"/tokenizer.js\");\r\n\r\nconst dualPunctuators = [\"(\", \"{\", \"[\"];\r\nconst dualPunctuatorsCounterpart = [\")\", \"}\", \"]\"];\r\n\r\nconst CodeInput = () => {\r\n    const Store = Container.useContainer();\r\n\tconst [stringMode, setStringMode] = useState(false);\r\n    const [charMode, setCharMode] = useState(false);\r\n    const [lastIndex, setLastIndex] = useState(null);\r\n    const [lastMovement, setLastMovement] = useState(null);\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const updateStorage = () => {\r\n    \tlocalStorage.setItem('contentArray', JSON.stringify(Store.contentArray));\r\n    \tlocalStorage.setItem('tokenArray', JSON.stringify(Store.tokenArray));\r\n    }\r\n\r\n    const inputHandler = (e) => {\r\n    \tlet textarea = e.target;\r\n        let newChar = textarea.value;\r\n        textarea.value = \"\";\r\n\r\n        let index = Store.cursorIndex;\r\n\t\tlet content = Store.contentArray[Store.cursorLine];\r\n\r\n        if(dualPunctuators.includes(newChar)){\r\n        \tlet counterPunctuator = dualPunctuatorsCounterpart[dualPunctuators.indexOf(newChar)];\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + newChar + counterPunctuator + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else if(newChar === \"\\\"\" && ((index > 1 && content[index - 2] !== \"\\\\\") || index <= 1)){\r\n        \tsetStringMode(!stringMode);\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + '\"\"' + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else if(newChar === \"'\" && ((index > 1 && content[index - 2] !== \"\\\\\") || index <= 1)){\r\n        \tsetCharMode(!charMode);\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + \"''\" + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else{\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + newChar + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n    }\r\n\r\n    const insertNewLine = (line, content) => {\r\n        Store.setLineCount(Store.lineCount + 1);\r\n        Store.contentArray.splice(line, 0, content);\r\n        Store.tokenArray.splice(line, 0, tokenizer.tokenize(content));\r\n        Store.setCursorLine(line);\r\n        Store.setCursorIndex(0);\r\n        Store.setCursorOffset(0);\r\n        updateStorage();\r\n    }\r\n\r\n\tconst deleteLine = (line) => {\r\n\t\tStore.contentArray.splice(line, 1);\r\n\t\tStore.tokenArray.splice(line, 1);\r\n\t\tStore.setLineCount(Store.lineCount - 1);\r\n\t\tupdateStorage();\r\n\t}\r\n\r\n\tconst pasteHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tlet paste = (e.clipboardData || window.clipboardData).getData('text');\r\n\t\tlet lines = paste.split(\"\\n\");\r\n\t\tlet l = Store.cursorLine;\r\n\r\n\t\tStore.tokenArray[l] = tokenizer.tokenize(Store.contentArray[l] + lines[0]);\r\n\t\tStore.contentArray[l] += lines[0];\r\n\r\n\t\tfor(var i = 1; i < lines.length; i++){\r\n\t\t\tinsertNewLine(l + i, lines[i]);\r\n\t\t}\r\n\t\tStore.setCursorIndex(lines[lines.length - 1].length);\r\n\t\tStore.setCursorOffset(findWidthofChar(lines[lines.length - 1]));\r\n\t}\r\n\r\n    const keyHandler = async (e) => {\r\n    \tvar key = e.keyCode || e.charCode;\r\n    \tvar line = Store.cursorLine;\r\n    \tvar content = Store.contentArray[line];\r\n    \tvar index = Store.cursorIndex;\r\n    \t//var input = e.target;\r\n\r\n    \tif(key === 8){\r\n    \t\t// BACKSPACE\r\n    \t\te.preventDefault();\r\n    \t\tif(index > 0){\r\n\t\t\t\tStore.setCursorIndex(index - 1);\r\n\t\t\t\tStore.setCursorOffset(Store.cursorOffset - findWidthofChar(content[index - 1]))\r\n\t\t\t\tcontent = content.slice(0, index - 1) + content.slice(index);\r\n\t\t\t\tStore.contentArray[line] = content;\r\n\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content);\r\n\t\t\t\tupdateStorage();\r\n\t\t\t}\r\n\t\t\telse if(index === 0){\r\n\t\t\t\tif(line > 0){\r\n\t\t\t\t\tlet prev_content = Store.contentArray[line - 1];\r\n\t\t\t\t\tStore.contentArray[line - 1] += content;\r\n\t\t\t\t\tStore.tokenArray[line - 1] = tokenizer.tokenize(prev_content + content);\r\n\t\t\t\t\tStore.setCursorLine(line - 1);\r\n\t\t\t\t\tStore.setCursorIndex(prev_content.length);\r\n\t\t\t\t\tStore.setCursorOffset(findWidthofChar(prev_content));\r\n\t\t\t\t\tdeleteLine(line);\r\n\t\t\t\t}\r\n\t\t\t}\r\n    \t}\r\n\t\telse if(key === 46){\r\n\t\t\t// DELETE\r\n\t\t\te.preventDefault();\r\n\t\t\tif(index === content.length){\r\n\t\t\t\tif(line + 1 < Store.lineCount){\r\n\t\t\t\t\tlet next_content = Store.contentArray[line + 1];\r\n\t\t\t\t\tStore.contentArray[line] += next_content;\r\n\t\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content + next_content);\r\n\t\t\t\t\tdeleteLine(line + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcontent = content.slice(0, index) + content.slice(index + 1);\r\n\t\t\t\tlet contentArray = [];\r\n\t\t\t\tfor(let i = 0; i < Store.contentArray.length; i++){\r\n\t\t\t\t\tcontentArray.push(Store.contentArray[i]);\r\n\t\t\t\t}\r\n\t\t\t\tcontentArray[line] = content;\r\n\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content);\r\n\t\t\t\tStore.setContentArray(contentArray);\r\n\t\t\t\tupdateStorage();\r\n\t\t\t}\r\n\t\t}\r\n    \telse if(key === 9){  \r\n            // TAB\r\n            e.preventDefault();\r\n            let n = Store.tabWidth - (index % Store.tabWidth);\r\n            let s = \" \".repeat(n);\r\n            content = content.slice(0, index) + s + content.slice(index);\r\n            Store.setCursorIndex(index + n);\r\n            Store.setCursorOffset(Store.cursorOffset + findWidthofChar(s));\r\n            let tokens = tokenizer.tokenize(content);\r\n            Store.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else if(key === 13){\r\n        \t// ENTER\r\n        \te.preventDefault();\r\n            e.stopPropagation();\r\n            let s = content.substring(0, index);\r\n            Store.contentArray[line] = s;\r\n            Store.tokenArray[line] = tokenizer.tokenize(s);\r\n            insertNewLine(line + 1, content.substring(index));\r\n        }\r\n    \telse if(key === 37){\r\n    \t\t// LEFT ARROW\r\n    \t\tif(index > 0){\r\n    \t\t\tStore.setCursorIndex(index - 1);\r\n    \t\t\tStore.setCursorOffset(findWidthofChar(content.slice(0, index-1)));\r\n    \t\t\tsetLastMovement('L');\r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\tif(line - 1 >= 0){\r\n    \t\t\t\tStore.setCursorIndex(Store.contentArray[line - 1].length);\r\n\t    \t\t\tStore.setCursorOffset(findWidthofChar(Store.contentArray[line - 1]));\r\n\t    \t\t\tStore.setCursorLine(line - 1);\r\n\t    \t\t\tsetLastMovement('L');\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \telse if(key === 38){\r\n            // \tUP ARROW\r\n            if(line > 0){\r\n            \tif(lastMovement === 'R' || lastMovement === 'L' || lastMovement === null){\r\n\t            \tawait setLastIndex(index);\r\n\t            }\r\n            \tsetLastMovement('U');\r\n                let i = Math.min(lastIndex || index, Store.contentArray[line - 1].length);\r\n                Store.setCursorLine(line - 1);\r\n                Store.setCursorIndex(i);\r\n                Store.setCursorOffset(findWidthofChar(Store.contentArray[line - 1].substring(0, i)));\r\n                //input.scrollIntoView();\r\n            }\r\n        }\r\n        else if(key === 40){\r\n            // \tDOWN ARROW\r\n            if(line +1 < Store.lineCount){\r\n            \tif(lastMovement === 'R' || lastMovement === 'L' || lastMovement === null){\r\n\t            \tawait setLastIndex(index);\r\n\t            }\r\n            \tsetLastMovement('U');\r\n                let i = Math.min(lastIndex || index, Store.contentArray[line + 1].length);\r\n                Store.setCursorLine(line + 1);\r\n                Store.setCursorIndex(i);\r\n                Store.setCursorOffset(findWidthofChar(Store.contentArray[line + 1].substring(0, i)));\r\n                //input.scrollIntoView();\r\n            }\r\n        }\r\n    \telse if(key === 39){\r\n    \t\t// RIGHT ARROW\r\n    \t\tif(index < content.length){\r\n    \t\t\tStore.setCursorIndex(index + 1);\r\n    \t\t\tStore.setCursorOffset(findWidthofChar(content.slice(0, index+1)));\r\n    \t\t\tsetLastMovement('R');\r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\tif(line + 1 < Store.lineCount){\r\n    \t\t\t\tStore.setCursorIndex(0);\r\n\t    \t\t\tStore.setCursorOffset(0);\r\n\t    \t\t\tStore.setCursorLine(line + 1);\r\n\t    \t\t\tsetLastMovement('R');\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n\treturn (\r\n        <textarea\r\n            id={\"edit_textarea\"}\r\n            style={{\r\n                height: Store.lineHeight + \"px\",\r\n                top: (Store.lineHeight * (Store.cursorLine)) + \"px\",\r\n                left: (Store.cursorOffset ? Store.cursorOffset : 0) + \"px\",\r\n                lineHeight: Store.lineHeight + \"px\"\r\n            }}\r\n            autoFocus\r\n            wrap=\"off\"\r\n            autoCapitalize=\"off\"\r\n            autoCorrect=\"off\"\r\n            spellCheck=\"false\"\r\n            onInput={inputHandler}\r\n            onKeyDown={keyHandler}\r\n\t\t\tonPaste={pasteHandler}\r\n        >\r\n        </textarea>    \r\n    )\r\n}\r\n\r\nexport default CodeInput;","import React from \"react\";\r\nimport Container from '../state/state.js';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst TextSearch = ({setFindMode}) => {\r\n    const Store = Container.useContainer();\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const close = () => {\r\n        let highlights = document.getElementsByClassName('text_search_highlight');\r\n        while(highlights.length > 0){\r\n            highlights[0].remove();\r\n        }\r\n\r\n        let canvas = document.getElementById('search_overview');\r\n        canvas.style.display=\"none\";\r\n        let context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        setFindMode(false);\r\n    }\r\n\r\n    const search = () => {\r\n        let highlights = document.getElementsByClassName('text_search_highlight');\r\n        while(highlights.length > 0){\r\n            highlights[0].remove();\r\n        }\r\n\r\n        let canvas = document.getElementById('search_overview');\r\n        canvas.style.display=\"block\";\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        let input = document.getElementById('text_search_input');\r\n        let searchString = input.value;\r\n        var l = searchString.length;\r\n        if (l === 0) {\r\n            return;\r\n        }\r\n        var i;\r\n        var locations = []\r\n        for(i in Store.contentArray){\r\n            let line = Store.contentArray[i];\r\n            var startIndex = 0, index, indices = [];\r\n            while ((index = line.indexOf(searchString, startIndex)) > -1) {\r\n                indices.push(index);\r\n                startIndex = index + l;\r\n            }\r\n            locations[i] = indices;\r\n        }\r\n        let line;\r\n        var w = findWidthofChar(searchString);\r\n        \r\n        ctx.beginPath();\r\n        ctx.lineWidth = 10;\r\n        ctx.strokeStyle = \"#10a115\";\r\n\r\n        for(line in locations){\r\n            var codeline = document.getElementById('editor_code_line_' + line);\r\n            \r\n            if(locations[line].length > 0){\r\n                ctx.moveTo(3, 20*line);\r\n                ctx.lineTo(3, 20 + 20*line);\r\n                ctx.stroke();\r\n            }\r\n\r\n            for(index of locations[line]){\r\n                let span = document.createElement('span');\r\n                span.classList.add('text_search_highlight');\r\n                span.style.left = findWidthofChar(Store.contentArray[line].slice(0, index)) + \"px\";\r\n                span.style.width = w + \"px\";\r\n                codeline.appendChild(span);\r\n            }\r\n        }\r\n    }\r\n\r\n    const keyHandler = (e) => {\r\n        var key = e.keyCode || e.charCode;\r\n        if(key === 13){\r\n            search();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"text_search\">\r\n            <div className=\"text_input_container\">\r\n                <input autoFocus placeholder=\"Find\" id=\"text_search_input\" onKeyDown={keyHandler} />\r\n                <SearchIcon style={{color: \"white\", position: \"absolute\", right: \"4px\", width: \"20px\"}} onClick={search} />\r\n            </div>\r\n            <div style={{position: \"absolute\", right: \"4px\", height: \"24px\", top: \"4px\"}}>\r\n                <KeyboardArrowUpIcon style={{color: \"white\", width: \"20px\"}} />\r\n                <KeyboardArrowDownIcon style={{color: \"white\", width: \"20px\"}} />\r\n                <CloseIcon style={{color: \"white\", width: \"20px\"}} onClick={close} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextSearch;","import React, { useEffect, useState } from 'react';\r\nimport LineMarker from \"./components/linemarker\";\r\nimport CodeLine from \"./components/codeline.js\";\r\nimport Container from './state/state.js';\r\nimport CodeInput from \"./components/codeinput.js\";\r\nimport TextSearch from \"./components/textsearch\";\r\nimport \"../css/editor.css\";\r\nvar language = localStorage.getItem(\"language\") || 'c';\r\nconst tokenizer = require(\"./engine/\" + language + \"/tokenizer.js\");\r\n\r\nfunction objectToArray(p){\r\n    var keys = Object.keys(p);\r\n    keys.sort(function(a, b) {\r\n        return a - b;\r\n    });\r\n\r\n    var arr = [];\r\n    for (var i = 0; i < keys.length; i++) {\r\n        arr.push(p[keys[i]]);\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst initiateState = (Store) => {\r\n    var contentArray, tokenArray;\r\n\r\n    localStorage.setItem(\"language\", \"c\");\r\n\r\n    if(localStorage.getItem(\"contentArray\") === null){\r\n        contentArray = Array.from({length: Store.lineCount}, (_, i) => \"\");\r\n        localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\r\n    }\r\n    else{\r\n        Store.setLineCount(Object.keys(JSON.parse(localStorage.getItem(\"contentArray\"))).length)\r\n    }\r\n    if(localStorage.getItem(\"tokenArray\") === null){\r\n        tokenArray = Array.from({length: Store.lineCount}, (_, i) => []);\r\n        localStorage.setItem(\"tokenArray\", JSON.stringify(tokenArray));\r\n    }\r\n    \r\n    contentArray = JSON.parse(localStorage.getItem(\"contentArray\"));\r\n    tokenArray = JSON.parse(localStorage.getItem(\"tokenArray\"));\r\n\r\n    Store.setContentArray(objectToArray(contentArray));\r\n    Store.setTokenArray(objectToArray(tokenArray));\r\n}\r\n\r\nconst downloadFile = (codeString, filename) => {\r\n    codeString = codeString.trimRight(\"\\n\") + \"\\n\";\r\n    var codeBlob = new Blob([codeString], {\r\n        type: \"text/plain\"\r\n    });\r\n    var url = URL.createObjectURL(codeBlob);\r\n    var a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n}\r\n\r\nconst findWidthofChar = (c) => {\r\n    c = c.replaceAll(\" \", \"\\u00a0\");\r\n    var elem = document.getElementById('text_width_finder');\r\n    elem.innerText = c;\r\n    let width = elem.getBoundingClientRect().width;\r\n    return width;\r\n}\r\n\r\n\r\nconst Editor = () => {\r\n    const [findMode, setFindMode] = useState(false);\r\n    const Store = Container.useContainer();\r\n    useEffect(() => {\r\n        if(Store.contentArray === null){\r\n            initiateState(Store);\r\n        }\r\n    }, [Store, Store.contentArray, Store.tokenArray])\r\n\r\n    const updateStorage = () => {\r\n    \tlocalStorage.setItem('contentArray', JSON.stringify(Store.contentArray));\r\n    \tlocalStorage.setItem('tokenArray', JSON.stringify(Store.tokenArray));\r\n    }\r\n\r\n    const clearSelection = (x1, y1, x2, y2) => {\r\n        for(let line = x1 + 1; line < x2; line++){\r\n            Store.contentArray.splice(line, 1);\r\n            Store.tokenArray.splice(line, 1);\r\n            Store.setLineCount(Store.lineCount - 1);\r\n        }\r\n\r\n        let c1 = Store.contentArray[x1].slice(0, y1);\r\n        let c2 = Store.contentArray[x2].slice(y2);\r\n        Store.contentArray[x1] = c1 + c2;\r\n        Store.tokenArray[x1] = tokenizer.tokenize(c1 + c2);\r\n\r\n        Store.contentArray.splice(x2, 1);\r\n        Store.tokenArray.splice(x2, 1);\r\n        Store.setLineCount(Store.lineCount - 1);\r\n\r\n        updateStorage();\r\n    }\r\n\r\n    const cutToClipboard = (e) => {\r\n        const [anchor_line, anchor_content_index, focus_line, focus_content_index] = copyToClipboard(e);\r\n        clearSelection(anchor_line, anchor_content_index, focus_line, focus_content_index);\r\n        if (window.getSelection().empty) {  \r\n            // Chrome\r\n            window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  \r\n            // Firefox\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n        Store.setCursorLine(anchor_line);\r\n        Store.setCursorIndex(anchor_content_index);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[anchor_line].slice(0, anchor_content_index)));\r\n        document.getElementById('edit_textarea').focus();\r\n    }\r\n\r\n    const copyToClipboard = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let selection = window.getSelection();\r\n        if(selection.toString().length > 0){\r\n            let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n            let anchor_index = parseInt(selection.anchorNode.parentElement.dataset.index);\r\n            let anchor_offset = selection.anchorOffset;\r\n            let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n            let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n            let focus_offset = selection.focusOffset;\r\n\r\n            if((focus_line < anchor_line) || (focus_line === anchor_line && focus_index < anchor_index)){\r\n                [anchor_line, focus_line] = [focus_line, anchor_line];\r\n                [anchor_index, focus_index] = [focus_index, anchor_index];\r\n                [anchor_offset, focus_offset] = [focus_offset, anchor_offset];\r\n            }\r\n\r\n            //console.log(anchor_line, anchor_index);\r\n            //console.log(focus_line, focus_index);\r\n\r\n            let copiedText = \"\";\r\n            copiedText += Store.tokenArray[anchor_line][anchor_index][0].slice(anchor_offset);\r\n            for(var i = anchor_index + 1; i < Store.tokenArray[anchor_line].length; i++){\r\n                copiedText += Store.tokenArray[anchor_line][i][0];\r\n            }\r\n            let anchor_content_index = Store.contentArray[anchor_line].length - copiedText.length;\r\n            copiedText += \"\\n\";\r\n            for(let i = anchor_line + 1; i < focus_line; i++){\r\n                copiedText += Store.contentArray[i];\r\n                copiedText += \"\\n\";\r\n            }\r\n            let focus_content_index = 0;\r\n            for(let i = 0; i < focus_index; i++){\r\n                focus_content_index += Store.tokenArray[focus_line][i][0].length;\r\n                copiedText += Store.tokenArray[focus_line][i][0];\r\n            }\r\n            copiedText += Store.tokenArray[focus_line][focus_index][0].slice(0, focus_offset);\r\n            focus_content_index += focus_offset;\r\n\r\n            e.clipboardData.setData('text/plain', copiedText);\r\n            return [anchor_line, anchor_content_index, focus_line, focus_content_index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const verbose = () => {\r\n        console.log(Store.cursorIndex);\r\n        console.log(Store.cursorOffset);\r\n        console.log(Store.cursorLine);\r\n    }\r\n\r\n    const keyHandler = (e) => {\r\n        var key = e.keyCode || e.charCode;\r\n\r\n        if(key === 70 && e.ctrlKey){\r\n            // Ctrl + F FIND FUNCTIONALITY\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setFindMode(true);\r\n        }\r\n        else if(key === 27){\r\n            // ESC\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            let highlights = document.getElementsByClassName('text_search_highlight');\r\n            while(highlights.length > 0){\r\n                highlights[0].remove();\r\n            }\r\n\r\n            let canvas = document.getElementById('search_overview');\r\n            canvas.style.display=\"none\";\r\n            let context = canvas.getContext('2d');\r\n            context.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            setFindMode(false);\r\n        }\r\n        else if(key === 83 && e.ctrlKey){\r\n            // Ctrl + S FOR SAVE\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var codeString = \"\";\r\n            var line;\r\n            for(line of Store.contentArray){\r\n                codeString += line + \"\\n\";\r\n            }\r\n            downloadFile(codeString, \"sush.c\");\r\n        }\r\n        else if(key === 46 && e.ctrlKey){\r\n            // Ctrl + Del FOR CLEARING\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            localStorage.removeItem('contentArray');\r\n            localStorage.removeItem('tokenArray');\r\n            initiateState(Store);\r\n            Store.setCursorLine(0);\r\n            Store.setCursorLine(0);\r\n        }\r\n    }\r\n\r\n    var lines = Array.from({length: Store.lineCount}, (_, i) => i)\r\n    return (\r\n        <div className=\"editor_wrapper\" id=\"editor_wrapper\">\r\n            <div className=\"editor_line_marker_wrapper\">\r\n                {lines.map((val, index) => {\r\n                    return (\r\n                        <LineMarker \r\n                            key={index} \r\n                            number={val} \r\n                            isContractible={false} \r\n                            isContracted= {false}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"editor_code_wrapper\" onCopy={copyToClipboard} onCut={cutToClipboard} onKeyDown={keyHandler}>\r\n                {findMode ? <TextSearch setFindMode={setFindMode} /> : \"\"}\r\n                <CodeInput />\r\n                {lines.map((val, index) => {\r\n                    return (\r\n                        <CodeLine \r\n                            key={index}\r\n                            line={index}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            <canvas id=\"search_overview\" width=\"6\" height=\"400\">\r\n            </canvas>\r\n            <button onClick={verbose} style={{display: \"none\"}}>Verbose</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Editor;","import Container from './state/state.js';\r\nimport Editor from \"./editor\";\r\n\r\nconst Wrapper = () => {\r\n    return (\r\n    \t<Container.Provider>\r\n\t        <Editor />\r\n\t    </Container.Provider>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import './App.css';\nimport Wrapper from \"./Editor/container\";\n\n\nfunction App() {\n  localStorage.setItem(\"language\", \"c\");\n    return (\n      <div className=\"App\">\n        <Wrapper />\n        <span id=\"text_width_finder\"></span>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
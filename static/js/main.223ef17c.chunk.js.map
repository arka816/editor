{"version":3,"sources":["Editor/engine sync /^/.*/classifier/.js$","Editor/engine/c/classifier.js","Editor/components/linemarker.js","Editor/components/codespan.js","Editor/components/codeline.js","Editor/components/codeinput.js","Editor/editor.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","languageData","require","datatypes","qualifiers","keywords","operators","punctuators","escapeseq","escapesequence","classifyCode","trim","includes","LineMarker","number","isContractible","height","isContracted","bgColor","isActive","className","style","backgroundColor","marginRight","color","language","localStorage","getItem","classifier","CodeSpan","replaceAll","type","qualifier","keyword","operator","punctuator","error","identifier","contentEditable","onClick","stopPropagation","Codeline","offset","activate","codeArray","document","getElementById","focus","val","index","CodeInput","lineHeight","activeLine","offsetArray","updateText","contentArray","JSON","parse","findWidthofChar","c","elem","innerHTML","getBoundingClientRect","width","autoFocus","top","left","wrap","autoCapitalize","autoCorrect","spellCheck","onInput","textarea","target","newChar","value","isNewWord","lastWord","length","push","setItem","stringify","onKeyDown","keyCode","charCode","lastChar","pop","slice","Editor","props","setState","state","lineCount","Array","from","this","_","i","lines","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.223ef17c.chunk.js","sourcesContent":["var map = {\n\t\"./c/classifier.js\": 16\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","const languageData = require(\"./language.json\");\r\nconst datatypes = languageData.datatypes;\r\nconst qualifiers = languageData.qualifiers;\r\nconst keywords = languageData.keywords;\r\nconst operators = languageData.operators;\r\nconst punctuators = languageData.punctuators;\r\nconst escapeseq = languageData.escapesequence;\r\n\r\nconst classifyCode = (code) => {\r\n    code = code.trim();\r\n    if(code === \"\") return \"space\";\r\n    else{\r\n        try{\r\n            if(datatypes.includes(code)) return \"type\";\r\n            else if(qualifiers.includes(code)) return \"qualifier\";\r\n            else if(keywords.includes(code)) return \"keyword\";\r\n            else if(operators.includes(code)) return \"operator\";\r\n            else if(punctuators.includes(code)) return \"punctuator\";\r\n            else if(escapeseq.includes(code)) return \"escapeseq\";\r\n            else return \"identifier\";\r\n        }\r\n        catch{\r\n            return \"error\";\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {classifyCode}","import React from 'react';\r\n\r\nconst LineMarker = ({number, isContractible, height, isContracted, isActive}) => {\r\n    var bgColor = isActive ? \"#272727\" : \"#2F3129\";\r\n    return (\r\n        <div className=\"editor_line_marker\" \r\n            style={{height: height + \"px\", backgroundColor: bgColor}}\r\n        >\r\n            <span style={{marginRight: \"5px\"}}>{number}</span>\r\n            {isContractible ? \r\n                <i className=\"fa fa-caret-down\" style={isContracted ? {color: \"white\"} : {color: \"gray\"}}></i> \r\n                : <i></i>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineMarker;","import React from 'react';\r\n\r\nvar language = localStorage.getItem(\"language\");\r\nconst classifier = require(\"../engine/\" + language + \"/classifier.js\");\r\n\r\nconst CodeSpan = ({code}) => {\r\n    code = code.replaceAll(\" \", \"\\u00a0\");\r\n    var colorCode = {\r\n        type: \"#5CD9EF\",\r\n        qualifier: \"#5CD9EF\",\r\n        keyword: \"#F92665\",\r\n        operator: \"#F92665\",\r\n        punctuator: \"#FFFFFF\",\r\n        escapeseq: \"#7C75FF\",\r\n        error: \"#FFFFFF\",\r\n        identifier: \"#FFFFFF\"\r\n    };\r\n\r\n    var color = colorCode[classifier.classifyCode(code)];\r\n\r\n    const handleChange = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    \r\n    return (\r\n        <span \r\n            contentEditable=\"true\" \r\n            className=\"editor_code_span\" style={{color: color}}\r\n            onClick = {handleChange}\r\n        >\r\n            {code}\r\n        </span>    \r\n    )\r\n}\r\n\r\nexport default CodeSpan;","import React from 'react';\r\nimport CodeSpan from \"./codespan\";\r\n\r\nconst Codeline = ({height, offset, isActive, activate, codeArray}) => {\r\n    const focusLine = () => {\r\n        activate();\r\n        document.getElementById(\"edit_textarea\").focus();\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"editor_code_line\" \r\n            style={{height: height + \"px\", backgroundColor: isActive ? \"#202020\" : \"#272822\"}}\r\n            onClick={focusLine}\r\n        >\r\n            {codeArray.map((val, index) => (\r\n                    <CodeSpan \r\n                        key={index}\r\n                        code={val}\r\n                    />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Codeline;","import React from 'react';\r\n\r\nconst CodeInput = ({lineHeight, activeLine, offsetArray, updateText}) => {\r\n    var contentArray = JSON.parse(localStorage.getItem(\"contentArray\"));\r\n    var offsetArray = JSON.parse(localStorage.getItem('offsetArray'));\r\n    var codeArray = contentArray[activeLine - 1];\r\n\r\n    const findWidthofChar = (c) => {\r\n        if(c === \" \") c = \"&nbsp\";\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerHTML = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const inputHandler = (e) => {\r\n        var textarea = e.target;\r\n        var newChar = textarea.value;\r\n        textarea.value = \"\";\r\n\r\n        var isNewWord = false;\r\n\r\n        var lastWord = codeArray.length > 0 ? codeArray[codeArray.length - 1] : \"\";\r\n        if(lastWord.length > 0 && lastWord[lastWord.length - 1] === \" \") isNewWord = true;\r\n\r\n        if(newChar === \" \"){\r\n            if(codeArray.length === 0 || !isNewWord) codeArray.push(newChar);\r\n            else codeArray[codeArray.length - 1] += newChar;\r\n        }\r\n        else{\r\n            if(codeArray.length === 0 || isNewWord) codeArray.push(newChar);\r\n            else codeArray[codeArray.length - 1] += newChar;\r\n        }\r\n        contentArray[activeLine - 1] = codeArray;\r\n        offsetArray[activeLine - 1] += findWidthofChar(newChar);\r\n        localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\r\n        localStorage.setItem(\"offsetArray\", JSON.stringify(offsetArray));\r\n        updateText(offsetArray, contentArray);\r\n    }\r\n\r\n    const backspaceHandler = (e) => {\r\n        var key = e.keyCode || e.charCode;\r\n        \r\n        if(key === 8 && codeArray.length > 0){\r\n            var lastChar;\r\n            let lastWord = codeArray[codeArray.length - 1];\r\n            if(lastWord === \"\"){\r\n                codeArray.pop();\r\n                lastWord = codeArray[codeArray.length - 1];\r\n                lastChar = lastWord[lastWord.length - 1];\r\n            }\r\n            else{\r\n                lastChar = lastWord[lastWord.length - 1];\r\n                lastWord = lastWord.slice(0, -1);\r\n                codeArray[codeArray.length - 1] = lastWord;\r\n                if(lastWord == \"\") codeArray.pop();\r\n            }\r\n            contentArray[activeLine - 1] = codeArray;\r\n            offsetArray[activeLine - 1] -= findWidthofChar(lastChar);\r\n            localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\r\n            localStorage.setItem(\"offsetArray\", JSON.stringify(offsetArray));\r\n            updateText(offsetArray, contentArray);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            autoFocus\r\n            id=\"edit_textarea\"\r\n            className=\"edit_textarea\"\r\n            style={{\r\n                    height: lineHeight + \"px\",\r\n                    top: (activeLine - 1) * lineHeight + \"px\",\r\n                    left: offsetArray[activeLine - 1] + \"px\",\r\n                    lineHeight: lineHeight + \"px\"\r\n                }}\r\n            wrap=\"off\"\r\n            autoCapitalize=\"off\"\r\n            autoCorrect=\"off\"\r\n            spellCheck=\"false\"\r\n            onInput={inputHandler}\r\n            onKeyDown={backspaceHandler}\r\n        >\r\n        </textarea>    \r\n    )\r\n}\r\n\r\nexport default CodeInput;","import React, { Component} from 'react';\r\nimport LineMarker from \"./components/linemarker\";\r\nimport Codeline from \"./components/codeline\";\r\nimport CodeInput from \"./components/codeinput\";\r\nimport \"../css/editor.css\";\r\n\r\nclass Editor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lineHeight: \"20\",\r\n            lineCount: 10,\r\n            activeLine: 1,\r\n            offsetArray: [],\r\n            contentArray: []\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        localStorage.setItem(\"language\", \"c\");\r\n        if(localStorage.getItem(\"contentArray\") == null){\r\n            var contentArray = Array.from({length: this.state.lineCount}, (_, i) => []);\r\n            localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\r\n        }\r\n        if(localStorage.getItem(\"offsetArray\") === null){\r\n            var offsetArray = Array.from({length: this.state.lineCount}, (_, i) => 0);\r\n            localStorage.setItem(\"offsetArray\", JSON.stringify(offsetArray));\r\n        }\r\n        var offsetArray = JSON.parse(localStorage.getItem(\"offsetArray\"));\r\n        var contentArray = JSON.parse(localStorage.getItem(\"contentArray\"));\r\n        this.setState({offsetArray: offsetArray, contentArray: contentArray});\r\n    }\r\n    updateText = (offsetArray, contentArray) => {\r\n        this.setState({offsetArray: offsetArray, contentArray: contentArray});\r\n    }\r\n    render(){\r\n        var lines = Array.from({length: this.state.lineCount}, (_, i) => i + 1)\r\n        return (\r\n            <div className=\"editor_wrapper\">\r\n                <div className=\"editor_line_marker_wrapper\">\r\n                    {lines.map((val, index) => {\r\n                        return (\r\n                            <LineMarker \r\n                                number={val} \r\n                                key={index} \r\n                                isContractible={false} \r\n                                height={this.state.lineHeight} \r\n                                isContracted= {false}\r\n                                isActive={this.state.activeLine === val}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"editor_code_wrapper\">\r\n                    {lines.map((val, index) => {\r\n                        return (\r\n                            <Codeline \r\n                                key={index}\r\n                                height={this.state.lineHeight}\r\n                                isActive={this.state.activeLine === val}\r\n                                activate = {() => {this.setState({activeLine: val})}}\r\n                                offset={this.state.offsetArray[index]}\r\n                                codeArray = {this.state.contentArray[index]}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <CodeInput \r\n                        lineHeight={this.state.lineHeight}\r\n                        activeLine = {this.state.activeLine}\r\n                        offsetArray = {this.state.offsetArray}\r\n                        updateText={this.updateText}\r\n                    />\r\n                </div>\r\n                <div id=\"text_width_finder\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Editor;","import './App.css';\nimport Editor from \"./Editor/editor\";\n\nfunction App() {\n  \treturn (\n    \t<div className=\"App\">\n\t\t\t<Editor />\n    \t</div>\n  \t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
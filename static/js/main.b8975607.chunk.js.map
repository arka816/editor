{"version":3,"sources":["Editor/engine sync /^/.*/tokenizer/.js$","Editor/engine/c/tokenizer.js","Editor/state/state.js","Editor/components/linemarker.js","Editor/components/codespan.js","Editor/components/codeline.js","Editor/components/codeinput.js","Editor/components/textsearch.js","Editor/editor.js","Editor/container.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","datatypes","qualifiers","keywords","operators","punctuators","preprocessor_directives","libraryFunctions","Set","tokens","cleanseTokens","i","length","splice","classify","indentedTokens","q","Math","floor","r","j","push","classifyToken","trim","indexOf","originalChar","slice","isChar","n","isNaN","parseFloat","substring","match","has","includes","tokenize","string","c","stringMode","charMode","symbolMode","commentMode","currentToken","Container","createContainer","useState","tabWidth","setTabWidth","lineHeight","setLineHeight","lineCount","setLineCount","contentArray","setContentArray","tokenArray","setTokenArray","cursorLine","setCursorLine","cursorIndex","setCursorIndex","cursorOffset","setCursorOffset","LineMarker","number","isContractible","isContracted","Store","useContainer","bgColor","className","style","height","backgroundColor","marginRight","color","CodeSpan","category","line","index","replaceAll","type","qualifier","keyword","operator","punctuator","escapeseq","error","identifier","string_literal","char_literal","numeric_literal","single_line_comment","multi_line_comment","multi_line_comment_start","multi_line_comment_end","indentation_guide_1","indentation_guide_2","lib_func","preproc_dir","findWidthofChar","elem","document","getElementById","innerText","getBoundingClientRect","width","data-index","contentEditable","spellCheck","fontStyle","onClick","x","offsetX","nativeEvent","clientX","target","left","stopPropagation","preventDefault","l","reduce","a","b","Array","isArray","w","focus","suppressContentEditableWarning","Codeline","data-line","top","undefined","value","language","localStorage","getItem","tokenizer","require","dualPunctuators","dualPunctuatorsCounterpart","CodeInput","setStringMode","setCharMode","lastIndex","setLastIndex","lastMovement","setLastMovement","updateStorage","setItem","JSON","stringify","insertNewLine","content","deleteLine","keyHandler","key","keyCode","charCode","prev_content","next_content","shiftKey","s","repeat","min","autoFocus","wrap","autoCapitalize","autoCorrect","onInput","textarea","newChar","counterPunctuator","onKeyDown","onPaste","lines","clipboardData","window","getData","split","prefix","suffix","TextSearch","found","setFound","searchIndex","setSearchIndex","highlightElems","setHighlightElems","search","highlights","getElementsByClassName","remove","canvas","display","ctx","getContext","clearRect","searchString","locations","startIndex","indices","beginPath","lineWidth","strokeStyle","elems","codeline","moveTo","lineTo","stroke","span","createElement","classList","add","appendChild","prevHighlight","nextIndex","nextHighlight","placeholder","position","right","objectToArray","p","sort","arr","initiateState","from","_","parse","Editor","setSelected","useEffect","onselectionchange","getSelection","toString","console","log","addEventListener","selection","anchor_line","parseInt","anchorNode","parentElement","dataset","anchor_index","anchor_offset","anchorOffset","focus_line","focusNode","focus_index","focus_offset","focusOffset","i1","i2","clearSelection","stopImmediatePropagation","count","trimLeft","empty","removeAllRanges","x1","y1","x2","y2","c1","c2","copyToClipboard","copiedText","anchor_content_index","focus_content_index","setData","onScroll","scrollLeft","val","onCopy","onCut","ctrlKey","codeString","filename","trimRight","codeBlob","Blob","url","URL","createObjectURL","href","download","body","click","removeChild","downloadFile","removeItem","Wrapper","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b8975607.chunk.js","sourcesContent":["var map = {\n\t\"./c/tokenizer.js\": 30\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","const datatypes = [\"int\", \"float\", \"double\", \"char\", \"auto\", \"void\"];\r\nconst qualifiers = [\"long\", \"short\", \"signed\", \"unsigned\"];\r\nconst keywords = [\"for\", \"if\", \"else\", \"switch\", \"return\", \"goto\", \"register\", \"do\", \"while\", \"break\", \"continue\", \"struct\", \"enum\", \"union\", \"static\", \"case\", \"default\", \"sizeof\", \"typedef\", \"volatile\", \"extern\"];\r\nconst operators = [\"+\", \"-\", \"*\", \"/\", \"%\", \"=\", \"==\", \"++\", \"--\", \"+=\", \"-=\", \"*=\", \"/=\", \">\", \"<\", \">=\", \"<=\", \"!=\", \">>\", \"<<\", \">>=\", \"<<=\", \"~\", \"!\", \"&\", \"|\", \"^\", \"&=\", \"|=\", \"^=\", \"~=\", \"?\", \":\", \"&&\", \"||\"];\r\nconst punctuators = [\",\", \".\", \";\", \"->\", \"#\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"...\", \"\\\"\", \"'\"];\r\nconst preprocessor_directives = ['define', 'include', 'undef', 'ifdef', 'ifndef', 'if', 'else', 'elif', 'endif', 'error', 'pragma'];\r\n//const escapeseq = [\"\\n\", \"\\r\", \"\\t\", \"\\b\", \"\\\\a\", \"\\\\'\", \"\\\"\", \"\\\\?\", \"\\\\\", \"\\f\", \"\\\\v\", \"\\\\0\", \"\\\\nnn\", \"\\\\xhh\"];\r\n//const comments = [\"//\", \"*/\", \"/*\"];\r\nconst libraryFunctions = new Set([\r\n    \"abort\",\"abs\",\"acos\",\"asctime\",\"asctime_r\",\"asin\",\"assert\",\"atan\",\"atan2\",\"atexit\",\"atof\",\"atoi\",\"atol\",\"bsearch\",\"btowc\",\r\n    \"calloc\",\"catclose6\",\"catgets6\",\"catopen6\",\"ceil\",\"clearerr\",\"clock\",\"cos\",\"cosh\",\"ctime\",\"ctime64\",\"ctime_r\",\"ctime64_r\",\r\n    \"difftime\",\"difftime64\",\"div\",\"erf\",\"erfc\",\"exit\",\"exp\",\"fabs\",\"fclose\",\"fdopen5\",\"feof\",\"ferror\",\"fflush1\",\"fgetc1\",\"fgetpos1\",\r\n    \"fgets1\",\"fgetwc6\",\"fgetws6\",\"fileno5\",\"floor\",\"fmod\",\"fopen\",\"fprintf\",\"fputc1\",\"fputs1\",\"fputwc6\",\"fputws6\",\"fread\",\"free\",\r\n    \"freopen\",\"frexp\",\"fscanf\",\"fseek1\",\"fsetpos1\",\"ftell1\",\"fwide6\",\"fwprintf6\",\"fwrite\",\"fwscanf6\",\"gamma\",\"getc1\",\"getchar1\",\r\n    \"getenv\",\"gets\",\"getwc6\",\"getwchar6\",\"gmtime\",\"gmtime64\",\"gmtime_r\",\"gmtime64_r\",\"hypot\",\"isalnum\",\"isalpha\",\"isascii4\",\r\n    \"isblank\",\"iscntrl\",\"isdigit\",\"isgraph\",\"islower\",\"isprint\",\"ispunct\",\"isspace\",\"isupper\",\"iswalnum4\",\"iswalpha4\",\"iswblank4\",\r\n    \"iswcntrl4\",\"iswctype4\",\"iswdigit4\",\"iswgraph4\",\"iswlower4\",\"iswprint4\",\"iswpunct4\",\"iswspace4\",\"iswupper4\",\"iswxdigit4\",\r\n    \"isxdigit4\",\"j0\",\"j1\",\"jn\",\"labs\",\"ldexp\",\"ldiv\",\"localeconv\",\"localtime\",\"localtime64\",\"localtime_r\",\"localtime64_r\",\"log\",\r\n    \"log10\",\"longjmp\", \"main\", \"malloc\",\"mblen\",\"mbrlen4\",\"mbrtowc4\",\"mbsinit4\",\"mbsrtowcs4\",\"mbstowcs\",\"mbtowc\",\"memchr\",\"memcmp\",\"memcpy\",\r\n    \"memmove\",\"memset\",\"mktime\",\"mktime64\",\"modf\",\"nextafter\",\"nextafterl\",\"nexttoward\",\"nexttowardl\",\"nl_langinfo4\",\"perror\",\"pow\",\r\n    \"printf\",\"putc1\",\"putchar1\",\"putenv\",\"puts\",\"putwc6\",\"putwchar6\",\"qsort\",\"quantexpd32\",\"quantexpd64\",\"quantexpd128\",\"quantized32\",\r\n    \"quantized64\",\"quantized128\",\"samequantumd32\",\"samequantumd64\",\"samequantumd128\",\"raise\",\"rand\",\"rand_r\",\"realloc\",\"regcomp\",\r\n    \"regerror\",\"regexec\",\"regfree\",\"remove\",\"rename\",\"rewind1\",\"scanf\",\"setbuf\",\"setjmp\",\"setlocale\",\"setvbuf\",\"signal\",\"sin\",\"sinh\",\r\n    \"snprintf\",\"sprintf\",\"sqrt\",\"srand\",\"sscanf\",\"strcasecmp\",\"strcat\",\"strchr\",\"strcmp\",\"strcoll\",\"strcpy\",\"strcspn\",\"strerror\",\r\n    \"strfmon4\",\"strftime\",\"strlen\",\"strncasecmp\",\"strncat\",\"strncmp\",\"strncpy\",\"strpbrk\",\"strptime4\",\"strrchr\",\"strspn\",\"strstr\",\r\n    \"strtod\",\"strtod32\",\"strtod64\",\"strtod128\",\"strtof\",\"strtok\",\"strtok_r\",\"strtol\",\"strtold\",\"strtoul\",\"strxfrm\",\"swprintf\",\r\n    \"swscanf\",\"system\",\"tan\",\"tanh\",\"time\",\"time64\",\"tmpfile\",\"tmpnam\",\"toascii\",\"tolower\",\"toupper\",\"towctrans\",\"towlower4\",\r\n    \"towupper4\",\"ungetc1\",\"ungetwc6\",\"va_arg\",\"va_copy\",\"va_end\",\"va_start\",\"vfprintf\",\"vfscanf\",\"vfwprintf6\",\"vfwscanf\",\"vprintf\",\r\n    \"vscanf\",\"vsprintf\",\"vsnprintf\",\"vsscanf\",\"vswprintf\",\"vswscanf\",\"vwprintf6\",\"vwscanf\",\"wcrtomb4\",\"wcscat\",\"wcschr\",\"wcscmp\",\r\n    \"wcscoll4\",\"wcscpy\",\"wcscspn\",\"wcsftime\",\"wcslen\",\"wcslocaleconv\",\"wcsncat\",\"wcsncmp\",\"wcsncpy\",\"wcspbrk\",\"wcsptime\",\"wcsrchr\",\r\n    \"wcsrtombs4\",\"wcsspn\",\"wcsstr\",\"wcstod\",\"wcstod32\",\"wcstod64\",\"wcstod128\",\"wcstof\",\"wcstok\",\"wcstol\",\"wcstold\",\"wcstombs\",\r\n    \"wcstoul\",\"wcsxfrm4\",\"wctob\",\"wctomb\",\"wctrans\",\"wctype4\",\"wcwidth\",\"wmemchr\",\"wmemcmp\",\"wmemcpy\",\"wmemmove\",\"wmemset\",\r\n    \"wprintf6\",\"wscanf6\",\"y0\",\"y1\",\"yn\"\r\n])\r\n\r\nvar tokens = [];\r\n\r\nconst isNumeric = (n) => {\r\n    if (typeof n != \"string\") return false;\r\n    return !isNaN(n) && !isNaN(parseFloat(n));\r\n}\r\n\r\nconst isChar = (code) => {\r\n    //needs revision\r\n    let originalChar = code.slice(1, -1);\r\n    if(originalChar.length > 1){\r\n        if(originalChar.length === 2 && originalChar[0] === \"\\\\\") return true;\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst checkIdentifier = (token) => {\r\n    var alphanumericRegExp = /^[0-9a-zA-Z_]+$/;\r\n    return token.match(alphanumericRegExp);\r\n}\r\n\r\nconst cleanseTokens = () => {\r\n    for(let i = 0; i < tokens.length; i++){\r\n        if(tokens[i] === \"\") tokens.splice(i, 1);\r\n    }\r\n}\r\n\r\nconst classify = () => {\r\n    var indentedTokens = []\r\n    var i = 0;\r\n    while(i < tokens.length && tokens[i] === \" \"){\r\n        i++;\r\n    }\r\n    \r\n    let q = Math.floor(i/4);\r\n    let r = i % 4;\r\n\r\n    if(q > 0){\r\n        for(let j = 0; j < q - 1; j++) indentedTokens.push([\"    \", \"indentation_guide_1\"])\r\n        if(r === 0) indentedTokens.push([\"    \", \"indentation_guide_2\"])\r\n        else indentedTokens.push([\"    \", \"indentation_guide_1\"])\r\n    }\r\n    \r\n    for(let i = 4*q; i < tokens.length; i++){\r\n        indentedTokens.push([tokens[i], classifyToken(tokens[i])]);\r\n    }\r\n    tokens = indentedTokens;\r\n}\r\n\r\nconst classifyToken = (code) => {\r\n    code = code.trim();\r\n    if(code === \"\") return \"space\";\r\n    else{\r\n        if(datatypes.indexOf(code) !== -1) return \"type\";\r\n        else if(qualifiers.indexOf(code) !== -1) return \"qualifier\";\r\n        else if(keywords.indexOf(code) !== -1) return \"keyword\";\r\n        else if(code[0] === \"\\\"\") return \"string_literal\";\r\n        else if (code[0] === \"'\") return (isChar(code) ? \"char_literal\" : \"error\");\r\n        else if(isNumeric(code)) return \"numeric_literal\";\r\n        else{\r\n            //symbols or identifiers\r\n            if(operators.indexOf(code) !== -1) return \"operator\";\r\n            if(punctuators.indexOf(code) !== -1){\r\n                if(code === '#') return 'operator';\r\n                else return \"punctuator\";\r\n            }\r\n            \r\n            if(code.substring(0, 2) === \"//\") return \"single_line_comment\";\r\n            else if(code.substring(0, 2) === \"/*\"){\r\n                if(code.substring(code.length - 2) === \"*/\") return \"multi_line_comment\";\r\n                else return \"multi_line_comment_start\";\r\n            }\r\n            else if(code.substring(code.length - 2, 2) === \"*/\") return \"multi_line_comment_end\";\r\n\r\n            if(checkIdentifier(code)){\r\n                if(libraryFunctions.has(code)) return \"lib_func\";\r\n                else if(preprocessor_directives.includes(code)) return \"preproc_dir\";\r\n                return \"identifier\";\r\n            }\r\n            else{\r\n                return \"error\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst tokenize = (string) => {\r\n    tokens = [];\r\n    var stringMode = false;\r\n    var charMode = false;\r\n    var symbolMode = false;\r\n    var commentMode = false;\r\n    var currentToken = \"\";\r\n    var c;\r\n\r\n    for(let i = 0; i < string.length; i++){\r\n        c = string[i];\r\n        if(commentMode){\r\n            //part of a multiline comment\r\n            currentToken += c;\r\n            if(c === \"/\" && i > 0 && string[i-1] === \"*\"){\r\n                //multi line comment ended\r\n                commentMode = false;\r\n                tokens[tokens.length - 1] += currentToken;\r\n                currentToken = \"\";\r\n            }\r\n        }\r\n        else{\r\n            if(c >= 'a' && c <= 'z'){\r\n                //identifier or datatype or qualifier or keyword\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"_\"){\r\n                //string or character or identifier\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c >= 'A' && c <= 'Z'){\r\n                //identifier\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c >= '0' && c <= '9'){\r\n                //identifier or numeric\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                currentToken += c;\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \" \"){\r\n                if(!stringMode && !charMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                    tokens.push(\" \");\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === '\"'){\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(i > 0 && string[i-1] !== \"\\\\\"){\r\n                    if(!stringMode){\r\n                        //string is starting\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\\\"\";\r\n                    }\r\n                    else{\r\n                        //string is ending\r\n                        currentToken += c;\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\";\r\n                    }\r\n                    stringMode = !stringMode;\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"'\"){\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(i > 0 && string[i-1] !== \"\\\\\"){\r\n                    if(!charMode){\r\n                        //character is starting\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"'\";\r\n                    }\r\n                    else{\r\n                        //character is ending\r\n                        currentToken += c;\r\n                        tokens.push(currentToken);\r\n                        currentToken = \"\";\r\n                    }\r\n                    charMode = !charMode;\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(punctuators.includes(c)){\r\n                //valid punctuator\r\n                if(symbolMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                }\r\n                if(!stringMode && !charMode){\r\n                    tokens.push(currentToken);\r\n                    currentToken = \"\";\r\n                    tokens.push(c);\r\n                }\r\n                else{\r\n                    currentToken += c;\r\n                }\r\n                symbolMode = false;\r\n            }\r\n            else if(c === \"\\\\\"){\r\n                currentToken += c;\r\n            }\r\n            else{\r\n                //symbols\r\n                if(operators.includes(c)){\r\n                    //valid operator symbol\r\n                    if(stringMode || charMode){\r\n                        //part of a string\r\n                        currentToken += c;\r\n                    }\r\n                    else{\r\n                        //not part of string or character\r\n                        //which means it is an individual symbol\r\n                        //or part of the previous symbol if any\r\n                        if(c === \"/\" && i > 0 && string[i-1] === \"/\"){\r\n                            //single line comment started\r\n                            //\r\n                            tokens[tokens.length - 1] += \"/\" + string.substring(i);\r\n                            cleanseTokens();\r\n                            classify();\r\n                            return tokens;\r\n                        }\r\n                        if(c === \"*\" && i > 0 && string[i-1] === \"/\"){\r\n                            //mutliline comment started\r\n                            currentToken += c;\r\n                            commentMode = true;\r\n                        }\r\n                        if(!commentMode){\r\n                            if(symbolMode){\r\n                                //last character was symbol too\r\n                                currentToken += c;\r\n                            }\r\n                            else{\r\n                                //last character was not symbol\r\n                                tokens.push(currentToken);\r\n                                currentToken = c;\r\n                            }\r\n                            symbolMode = true;\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(stringMode || charMode){\r\n                        //part of string\r\n                        //so no problem\r\n                    }\r\n                    else{\r\n                        tokens.push(currentToken);\r\n                        tokens.push(c);\r\n                        currentToken = \"\";\r\n                    }\r\n                    symbolMode = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    tokens.push(currentToken);\r\n    cleanseTokens();\r\n    classify();\r\n    return tokens;\r\n}\r\n\r\nmodule.exports = {tokenize};","import {useState} from 'react';\r\nimport { createContainer } from \"unstated-next\";\r\n\r\nfunction useStore(){\r\n\tconst [tabWidth, setTabWidth] = useState(4);\r\n    const [lineHeight, setLineHeight] = useState(20);\r\n    const [lineCount, setLineCount] = useState(30);\r\n    const [contentArray, setContentArray] = useState(null);\r\n    const [tokenArray, setTokenArray] = useState(null);\r\n    const [cursorLine, setCursorLine] = useState(0);\r\n    const [cursorIndex, setCursorIndex] = useState(0);\r\n    const [cursorOffset, setCursorOffset] = useState(0);\r\n\r\n    return {tabWidth, setTabWidth, lineHeight, setLineHeight, lineCount, setLineCount, cursorOffset, setCursorOffset, contentArray, setContentArray, tokenArray, setTokenArray, cursorLine, setCursorLine, cursorIndex, setCursorIndex};\r\n}\r\n\r\nlet Container = createContainer(useStore);\r\n\r\nexport default Container;","import React from 'react';\r\nimport Container from '../state/state.js';\r\n\r\nconst LineMarker = ({number, isContractible, isContracted}) => {\r\n    const Store = Container.useContainer();\r\n    var bgColor = Store.cursorLine === number ? \"#272727\" : \"#2F3129\";\r\n    return (\r\n        <div className=\"editor_line_marker\" \r\n            style={{height: Store.lineHeight + \"px\", backgroundColor: bgColor}}\r\n        >\r\n            <span style={{marginRight: \"5px\"}}>{number + 1}</span>\r\n            {isContractible ? \r\n                <i className=\"fa fa-caret-down\" style={isContracted ? {color: \"white\"} : {color: \"gray\"}}></i> \r\n                : <i></i>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineMarker;","import React from 'react';\r\nimport Container from '../state/state.js';\r\n\r\nconst CodeSpan = ({code, category, line, index}) => {\r\n    const Store = Container.useContainer();\r\n    code = code.replaceAll(\" \", \"\\u00a0\");\r\n    var colorCode = {\r\n        type: \"#5CD9EF\",\r\n        qualifier: \"#5CD9EF\",\r\n        keyword: \"#F92665\",\r\n        operator: \"#F92665\",\r\n        punctuator: \"#FFFFFF\",\r\n        escapeseq: \"#7C75FF\",\r\n        error: \"#FFFFFF\",\r\n        identifier: \"#FFFFFF\",\r\n        string_literal: \"#E6DB74\",\r\n        char_literal: \"#E6DB74\",\r\n        numeric_literal: \"#7C75FF\",\r\n        single_line_comment: \"#1e9104\",\r\n        multi_line_comment: \"#1e9104\",\r\n        multi_line_comment_start: \"#1e9104\",\r\n        multi_line_comment_end: \"#1e9104\",\r\n        indentation_guide_1: \"transparent\",\r\n        indentation_guide_2: \"transparent\",\r\n        lib_func: \"#66D9E2\",\r\n        preproc_dir: '#F92665'\r\n    };\r\n\r\n    var color = colorCode[category];\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        var x = e.offsetX || e.nativeEvent.offsetX;\r\n        x = e.clientX - e.target.getBoundingClientRect().left;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        Store.setCursorLine(line);\r\n        var l = Store.tokenArray[line].slice(0, index).reduce(function(a, b){\r\n            if(Array.isArray(a)) return a[0].length + b[0].length;\r\n            return a + b[0].length\r\n        }, 0);\r\n        var w = 0;\r\n        var i = 0;\r\n        for(i = 0; i < code.length; i++){\r\n            w += findWidthofChar(code[i]);\r\n            if(w > x){\r\n                if((w-x) < (x - w + findWidthofChar(code[i]))) i = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        Store.setCursorIndex(l + i);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[line].slice(0, l + i)))\r\n        document.getElementById(\"edit_textarea\").focus();\r\n    }\r\n    \r\n    return (\r\n        <span \r\n            data-index={index}\r\n            contentEditable=\"false\" \r\n            spellCheck=\"false\"\r\n            className={category === \"indentation_guide_1\" ? \"editor_code_span editor_code_span_indentation\" : \"editor_code_span\"}\r\n            style={{color: color, fontStyle: category === \"type\" || category === \"qualifier\" ? \"italic\" : \"normal\"}}\r\n            onClick = {handleChange}\r\n            suppressContentEditableWarning={true}\r\n        >\r\n            {code}\r\n        </span>    \r\n    )\r\n}\r\n\r\nexport default CodeSpan;","import React from 'react';\r\nimport CodeSpan from \"./codespan\";\r\nimport Container from '../state/state.js';\r\n\r\nconst Codeline = ({line}) => {\r\n    const Store = Container.useContainer();\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n    const focusLine = () => {\r\n        Store.setCursorLine(line);\r\n        Store.setCursorIndex(Store.contentArray[line].length);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[line]));\r\n        document.getElementById(\"edit_textarea\").focus();\r\n    }\r\n    return (\r\n        <div \r\n            data-line={line}\r\n            id={\"editor_code_line_\" + line}\r\n            className=\"editor_code_line\" \r\n            style={{height: Store.lineHeight + \"px\", backgroundColor: line === Store.cursorLine ? \"#202020\" : \"#272822\", top: (Store.lineHeight * (line)) + \"px\"}}\r\n            onClick={focusLine}\r\n        >\r\n            {\r\n                Store.tokenArray === null || Store.tokenArray === undefined ? \"\" : \r\n                (\r\n                    Store.tokenArray[line] === null || Store.tokenArray[line] === undefined ? \"\" :\r\n                    Store.tokenArray[line].map((value, index) => (\r\n                        <CodeSpan \r\n                            key={index}\r\n                            index={index}\r\n                            code={value[0]}\r\n                            category={value[1]}\r\n                            line={line}\r\n                        />\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Codeline;","import React, {useState} from 'react';\r\nimport Container from '../state/state.js';\r\nvar language = localStorage.getItem(\"language\") || 'c';\r\nconst tokenizer = require(\"../engine/\" + language + \"/tokenizer.js\");\r\n\r\nconst dualPunctuators = [\"(\", \"{\", \"[\"];\r\nconst dualPunctuatorsCounterpart = [\")\", \"}\", \"]\"];\r\n\r\nconst CodeInput = () => {\r\n    const Store = Container.useContainer();\r\n\tconst [stringMode, setStringMode] = useState(false);\r\n    const [charMode, setCharMode] = useState(false);\r\n    const [lastIndex, setLastIndex] = useState(null);\r\n    const [lastMovement, setLastMovement] = useState(null);\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const updateStorage = () => {\r\n    \tlocalStorage.setItem('contentArray', JSON.stringify(Store.contentArray));\r\n    \tlocalStorage.setItem('tokenArray', JSON.stringify(Store.tokenArray));\r\n    }\r\n\r\n    const inputHandler = (e) => {\r\n\t\te.stopPropagation();\r\n    \tlet textarea = e.target;\r\n        let newChar = textarea.value;\r\n        textarea.value = \"\";\r\n\r\n        let index = Store.cursorIndex;\r\n\t\tlet content = Store.contentArray[Store.cursorLine];\r\n\r\n        if(dualPunctuators.includes(newChar)){\r\n        \tlet counterPunctuator = dualPunctuatorsCounterpart[dualPunctuators.indexOf(newChar)];\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + newChar + counterPunctuator + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else if(newChar === \"\\\"\" && ((index > 1 && content[index - 2] !== \"\\\\\") || index <= 1)){\r\n        \tsetStringMode(!stringMode);\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + '\"\"' + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else if(newChar === \"'\" && ((index > 1 && content[index - 2] !== \"\\\\\") || index <= 1)){\r\n        \tsetCharMode(!charMode);\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + \"''\" + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n        else{\r\n        \tStore.setCursorIndex(index + 1);\r\n        \tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(newChar));\r\n        \tcontent = content.slice(0, index) + newChar + content.slice(index);\r\n    \t\tlet tokens = tokenizer.tokenize(content);\r\n    \t\tStore.contentArray[Store.cursorLine] = content;\r\n    \t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n    \t\tupdateStorage();\r\n        }\r\n    }\r\n\r\n    const insertNewLine = (line, content) => {\r\n        Store.setLineCount(Store.lineCount + 1);\r\n        Store.contentArray.splice(line, 0, content);\r\n        Store.tokenArray.splice(line, 0, tokenizer.tokenize(content));\r\n        Store.setCursorLine(line);\r\n        Store.setCursorIndex(0);\r\n        Store.setCursorOffset(0);\r\n        updateStorage();\r\n    }\r\n\r\n\tconst deleteLine = (line) => {\r\n\t\tStore.contentArray.splice(line, 1);\r\n\t\tStore.tokenArray.splice(line, 1);\r\n\t\tStore.setLineCount(Store.lineCount - 1);\r\n\t\tupdateStorage();\r\n\t}\r\n\r\n\tconst pasteHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tlet paste = (e.clipboardData || window.clipboardData).getData('text');\r\n\t\tlet lines = paste.split(\"\\n\");\r\n\t\tlet l = Store.cursorLine;\r\n\t\tlet index = Store.cursorIndex;\r\n\r\n\t\tlet prefix = Store.contentArray[l].slice(0, index);\r\n\t\tlet suffix = Store.contentArray[l].slice(index);\r\n\r\n\t\tStore.tokenArray[l] = tokenizer.tokenize(prefix + lines[0]);\r\n\t\tStore.contentArray[l] = prefix + lines[0];\r\n\r\n\t\tfor(var i = 1; i < lines.length; i++){\r\n\t\t\tif(i === lines.length - 1) insertNewLine(l + i, lines[i] + suffix); \r\n\t\t\telse insertNewLine(l + i, lines[i]);\r\n\t\t}\r\n\t\tStore.setCursorIndex(lines[lines.length - 1].length);\r\n\t\tStore.setCursorOffset(findWidthofChar(lines[lines.length - 1]));\r\n\t}\r\n\r\n    const keyHandler = async (e) => {\r\n    \tvar key = e.keyCode || e.charCode;\r\n    \tvar line = Store.cursorLine;\r\n    \tvar content = Store.contentArray[line];\r\n    \tvar index = Store.cursorIndex;\r\n    \t//var input = e.target;\r\n\r\n    \tif(key === 8){\r\n    \t\t// BACKSPACE\r\n    \t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n    \t\tif(index > 0){\r\n\t\t\t\tStore.setCursorIndex(index - 1);\r\n\t\t\t\tStore.setCursorOffset(Store.cursorOffset - findWidthofChar(content[index - 1]))\r\n\t\t\t\tcontent = content.slice(0, index - 1) + content.slice(index);\r\n\t\t\t\tStore.contentArray[line] = content;\r\n\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content);\r\n\t\t\t\tupdateStorage();\r\n\t\t\t}\r\n\t\t\telse if(index === 0){\r\n\t\t\t\tif(line > 0){\r\n\t\t\t\t\tlet prev_content = Store.contentArray[line - 1];\r\n\t\t\t\t\tStore.contentArray[line - 1] += content;\r\n\t\t\t\t\tStore.tokenArray[line - 1] = tokenizer.tokenize(prev_content + content);\r\n\t\t\t\t\tStore.setCursorLine(line - 1);\r\n\t\t\t\t\tStore.setCursorIndex(prev_content.length);\r\n\t\t\t\t\tStore.setCursorOffset(findWidthofChar(prev_content));\r\n\t\t\t\t\tdeleteLine(line);\r\n\t\t\t\t}\r\n\t\t\t}\r\n    \t}\r\n\t\telse if(key === 46){\r\n\t\t\t// DELETE\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tif(index === content.length){\r\n\t\t\t\tif(line + 1 < Store.lineCount){\r\n\t\t\t\t\tlet next_content = Store.contentArray[line + 1];\r\n\t\t\t\t\tStore.contentArray[line] += next_content;\r\n\t\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content + next_content);\r\n\t\t\t\t\tdeleteLine(line + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcontent = content.slice(0, index) + content.slice(index + 1);\r\n\t\t\t\tlet contentArray = [];\r\n\t\t\t\tfor(let i = 0; i < Store.contentArray.length; i++){\r\n\t\t\t\t\tcontentArray.push(Store.contentArray[i]);\r\n\t\t\t\t}\r\n\t\t\t\tcontentArray[line] = content;\r\n\t\t\t\tStore.tokenArray[line] = tokenizer.tokenize(content);\r\n\t\t\t\tStore.setContentArray(contentArray);\r\n\t\t\t\tupdateStorage();\r\n\t\t\t}\r\n\t\t}\r\n    \telse if(key === 9){  \r\n            // TAB\r\n            if(e.shiftKey){\r\n\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tlet n = Store.tabWidth - (index % Store.tabWidth);\r\n\t\t\t\tlet s = \" \".repeat(n);\r\n\t\t\t\tcontent = content.slice(0, index) + s + content.slice(index);\r\n\t\t\t\tStore.setCursorIndex(index + n);\r\n\t\t\t\tStore.setCursorOffset(Store.cursorOffset + findWidthofChar(s));\r\n\t\t\t\tlet tokens = tokenizer.tokenize(content);\r\n\t\t\t\tStore.contentArray[Store.cursorLine] = content;\r\n\t\t\t\tStore.tokenArray[Store.cursorLine] = tokens;\r\n\t\t\t\tupdateStorage();\r\n\t\t\t}\r\n        }\r\n        else if(key === 13){\r\n        \t// ENTER\r\n        \te.preventDefault();\r\n            e.stopPropagation();\r\n            let s = content.substring(0, index);\r\n            Store.contentArray[line] = s;\r\n            Store.tokenArray[line] = tokenizer.tokenize(s);\r\n            insertNewLine(line + 1, content.substring(index));\r\n        }\r\n    \telse if(key === 37){\r\n    \t\t// LEFT ARROW\r\n\t\t\te.stopPropagation();\r\n    \t\tif(index > 0){\r\n    \t\t\tStore.setCursorIndex(index - 1);\r\n    \t\t\tStore.setCursorOffset(findWidthofChar(content.slice(0, index-1)));\r\n    \t\t\tsetLastMovement('L');\r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\tif(line - 1 >= 0){\r\n    \t\t\t\tStore.setCursorIndex(Store.contentArray[line - 1].length);\r\n\t    \t\t\tStore.setCursorOffset(findWidthofChar(Store.contentArray[line - 1]));\r\n\t    \t\t\tStore.setCursorLine(line - 1);\r\n\t    \t\t\tsetLastMovement('L');\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \telse if(key === 38){\r\n            // \tUP ARROW\r\n\t\t\te.stopPropagation();\r\n            if(line > 0){\r\n            \tif(lastMovement === 'R' || lastMovement === 'L' || lastMovement === null){\r\n\t            \tawait setLastIndex(index);\r\n\t            }\r\n            \tsetLastMovement('U');\r\n                let i = Math.min(lastIndex || index, Store.contentArray[line - 1].length);\r\n                Store.setCursorLine(line - 1);\r\n                Store.setCursorIndex(i);\r\n                Store.setCursorOffset(findWidthofChar(Store.contentArray[line - 1].substring(0, i)));\r\n                //input.scrollIntoView();\r\n            }\r\n        }\r\n        else if(key === 40){\r\n            // \tDOWN ARROW\r\n\t\t\te.stopPropagation();\r\n            if(line +1 < Store.lineCount){\r\n            \tif(lastMovement === 'R' || lastMovement === 'L' || lastMovement === null){\r\n\t            \tawait setLastIndex(index);\r\n\t            }\r\n            \tsetLastMovement('U');\r\n                let i = Math.min(lastIndex || index, Store.contentArray[line + 1].length);\r\n                Store.setCursorLine(line + 1);\r\n                Store.setCursorIndex(i);\r\n                Store.setCursorOffset(findWidthofChar(Store.contentArray[line + 1].substring(0, i)));\r\n                //input.scrollIntoView();\r\n            }\r\n        }\r\n    \telse if(key === 39){\r\n    \t\t// RIGHT ARROW\r\n\t\t\te.stopPropagation();\r\n    \t\tif(index < content.length){\r\n    \t\t\tStore.setCursorIndex(index + 1);\r\n    \t\t\tStore.setCursorOffset(findWidthofChar(content.slice(0, index+1)));\r\n    \t\t\tsetLastMovement('R');\r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\tif(line + 1 < Store.lineCount){\r\n    \t\t\t\tStore.setCursorIndex(0);\r\n\t    \t\t\tStore.setCursorOffset(0);\r\n\t    \t\t\tStore.setCursorLine(line + 1);\r\n\t    \t\t\tsetLastMovement('R');\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n\treturn (\r\n        <textarea\r\n            id={\"edit_textarea\"}\r\n            style={{\r\n                height: Store.lineHeight + \"px\",\r\n                top: (Store.lineHeight * (Store.cursorLine)) + \"px\",\r\n                left: (Store.cursorOffset ? Store.cursorOffset : 0) + \"px\",\r\n                lineHeight: Store.lineHeight + \"px\"\r\n            }}\r\n            autoFocus\r\n            wrap=\"off\"\r\n            autoCapitalize=\"off\"\r\n            autoCorrect=\"off\"\r\n            spellCheck=\"false\"\r\n            onInput={inputHandler}\r\n            onKeyDown={keyHandler}\r\n\t\t\tonPaste={pasteHandler}\r\n        >\r\n        </textarea>    \r\n    )\r\n}\r\n\r\nexport default CodeInput;","import React, {useState} from \"react\";\r\nimport Container from '../state/state.js';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst TextSearch = () => {\r\n    const [found, setFound] = useState(false);\r\n    const [searchIndex, setSearchIndex] = useState(0);\r\n    const [highlightElems, setHighlightElems] = useState([]);\r\n    const Store = Container.useContainer();\r\n\r\n\r\n    const findWidthofChar = (c) => {\r\n        c = c.replaceAll(\" \", \"\\u00a0\");\r\n        var elem = document.getElementById('text_width_finder');\r\n        elem.innerText = c;\r\n        let width = elem.getBoundingClientRect().width;\r\n        return width;\r\n    }\r\n\r\n    const close = () => {\r\n        let highlights = document.getElementsByClassName('text_search_highlight');\r\n        while(highlights.length > 0){\r\n            highlights[0].remove();\r\n        }\r\n\r\n        let canvas = document.getElementById('search_overview');\r\n        canvas.style.display=\"none\";\r\n        let context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        setHighlightElems([]);\r\n        let search = document.getElementById('text_search');\r\n        search.classList.remove('text_search_animation');\r\n        search.classList.add('text_search_animation_rev');\r\n    }\r\n\r\n    const search = () => {\r\n        let highlights = document.getElementsByClassName('text_search_highlight');\r\n        while(highlights.length > 0){\r\n            highlights[0].remove();\r\n        }\r\n\r\n        let canvas = document.getElementById('search_overview');\r\n        canvas.style.display=\"block\";\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        let input = document.getElementById('text_search_input');\r\n        let searchString = input.value;\r\n        var l = searchString.length;\r\n        if (l === 0) {\r\n            return;\r\n        }\r\n        var i;\r\n        var locations = []\r\n        for(i in Store.contentArray){\r\n            let line = Store.contentArray[i];\r\n            var startIndex = 0, index, indices = [];\r\n            while ((index = line.indexOf(searchString, startIndex)) > -1) {\r\n                indices.push(index);\r\n                startIndex = index + l;\r\n            }\r\n            locations[i] = indices;\r\n        }\r\n        let line;\r\n        var w = findWidthofChar(searchString);\r\n        \r\n        ctx.beginPath();\r\n        ctx.lineWidth = 10;\r\n        ctx.strokeStyle = \"rgba(16, 161, 21, 0.5)\";\r\n\r\n        if(locations.length > 0) setFound(true);\r\n        else setFound(false);\r\n\r\n        let elems = [];\r\n\r\n        for(line in locations){\r\n            var codeline = document.getElementById('editor_code_line_' + line);\r\n            \r\n            if(locations[line].length > 0){\r\n                ctx.moveTo(3, 20*line);\r\n                ctx.lineTo(3, 20 + 20*line);\r\n                ctx.stroke();\r\n            }\r\n\r\n            for(index of locations[line]){\r\n                let span = document.createElement('span');\r\n                span.classList.add('text_search_highlight');\r\n                span.style.left = findWidthofChar(Store.contentArray[line].slice(0, index)) + \"px\";\r\n                span.style.width = w + \"px\";\r\n                codeline.appendChild(span);\r\n                elems.push(span);\r\n            }\r\n        }\r\n\r\n        setHighlightElems(elems);\r\n        setSearchIndex(0);\r\n\r\n        elems[0].style.backgroundColor = \"rgba(81, 109, 120, 0.5)\";\r\n    }\r\n\r\n    const keyHandler = (e) => {\r\n        e.stopPropagation();\r\n        var key = e.keyCode || e.charCode;\r\n        if(key === 13){\r\n            search();\r\n        }\r\n    }\r\n\r\n    const prevHighlight = () => {\r\n        highlightElems[searchIndex].style.backgroundColor = \"rgba(8, 135, 8, 0.3)\";\r\n        let nextIndex = (highlightElems.length + searchIndex - 1)%(highlightElems.length);\r\n        highlightElems[nextIndex].style.backgroundColor = \"rgba(81, 109, 120, 0.5)\";\r\n        setSearchIndex(nextIndex);\r\n    }\r\n\r\n    const nextHighlight = () => {\r\n        highlightElems[searchIndex].style.backgroundColor = \"rgba(8, 135, 8, 0.3)\";\r\n        let nextIndex = (searchIndex + 1)%(highlightElems.length);\r\n        highlightElems[nextIndex].style.backgroundColor = \"rgba(81, 109, 120, 0.5)\";\r\n        setSearchIndex(nextIndex);\r\n    }\r\n\r\n    const searchNavHandler = (e) => {\r\n        e.preventDefault();\r\n        var key = e.keyCode || e.charCode;\r\n\r\n        if(key === 39 || key === 40){\r\n            nextHighlight();\r\n            e.stopPropagation();\r\n        }\r\n        else if(key === 37 || key === 38){\r\n            prevHighlight();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"text_search\" id=\"text_search\" onKeyDown={searchNavHandler}>\r\n            <div className=\"text_input_container\">\r\n                <input autoFocus placeholder=\"Find\" id=\"text_search_input\" onKeyDown={keyHandler} />\r\n                <SearchIcon style={{color: \"white\", position: \"absolute\", right: \"4px\", width: \"20px\"}} onClick={search} />\r\n            </div>\r\n            <div style={{position: \"absolute\", right: \"4px\", height: \"24px\", top: \"4px\"}}>\r\n                <KeyboardArrowUpIcon style={{color: found ? \"white\" : \"#636360\", width: \"20px\"}} onClick={prevHighlight} />\r\n                <KeyboardArrowDownIcon style={{color: found ? \"white\" : \"#636360\", width: \"20px\"}} onClick={nextHighlight} />\r\n                <CloseIcon style={{color: \"white\", width: \"20px\"}} onClick={close} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextSearch;","import React, { useEffect, useState } from 'react';\r\nimport LineMarker from \"./components/linemarker\";\r\nimport CodeLine from \"./components/codeline.js\";\r\nimport Container from './state/state.js';\r\nimport CodeInput from \"./components/codeinput.js\";\r\nimport TextSearch from \"./components/textsearch\";\r\nimport \"../css/editor.css\";\r\nvar language = localStorage.getItem(\"language\") || 'c';\r\nconst tokenizer = require(\"./engine/\" + language + \"/tokenizer.js\");\r\n\r\nfunction objectToArray(p){\r\n    var keys = Object.keys(p);\r\n    keys.sort(function(a, b) {\r\n        return a - b;\r\n    });\r\n\r\n    var arr = [];\r\n    for (var i = 0; i < keys.length; i++) {\r\n        arr.push(p[keys[i]]);\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst initiateState = (Store) => {\r\n    var contentArray, tokenArray;\r\n\r\n    localStorage.setItem(\"language\", \"c\");\r\n\r\n    if(localStorage.getItem(\"contentArray\") === null){\r\n        contentArray = Array.from({length: Store.lineCount}, (_, i) => \"\");\r\n        localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\r\n    }\r\n    else{\r\n        Store.setLineCount(Object.keys(JSON.parse(localStorage.getItem(\"contentArray\"))).length)\r\n    }\r\n    if(localStorage.getItem(\"tokenArray\") === null){\r\n        tokenArray = Array.from({length: Store.lineCount}, (_, i) => []);\r\n        localStorage.setItem(\"tokenArray\", JSON.stringify(tokenArray));\r\n    }\r\n    \r\n    contentArray = JSON.parse(localStorage.getItem(\"contentArray\"));\r\n    tokenArray = JSON.parse(localStorage.getItem(\"tokenArray\"));\r\n\r\n    Store.setContentArray(objectToArray(contentArray));\r\n    Store.setTokenArray(objectToArray(tokenArray));\r\n}\r\n\r\nconst downloadFile = (codeString, filename) => {\r\n    codeString = codeString.trimRight(\"\\n\") + \"\\n\";\r\n    var codeBlob = new Blob([codeString], {\r\n        type: \"text/plain\"\r\n    });\r\n    var url = URL.createObjectURL(codeBlob);\r\n    var a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n}\r\n\r\nconst findWidthofChar = (c) => {\r\n    c = c.replaceAll(\" \", \"\\u00a0\");\r\n    var elem = document.getElementById('text_width_finder');\r\n    elem.innerText = c;\r\n    let width = elem.getBoundingClientRect().width;\r\n    return width;\r\n}\r\n\r\n\r\n\r\n\r\nconst Editor = () => {\r\n    const [findMode, setFindMode] = useState(false);\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    const Store = Container.useContainer();\r\n\r\n    useEffect(() => {\r\n        if(Store.contentArray === null){\r\n            initiateState(Store);\r\n        }\r\n    }, [Store, Store.contentArray, Store.tokenArray])\r\n\r\n    document.onselectionchange = () => {\r\n        if(window.getSelection().toString().length > 0){\r\n            setSelected(true);\r\n            console.log(window.getSelection())\r\n            document.getElementById(\"editor_code_wrapper\").focus();\r\n        }\r\n    }\r\n\r\n\r\n    const updateStorage = () => {\r\n    \tlocalStorage.setItem('contentArray', JSON.stringify(Store.contentArray));\r\n    \tlocalStorage.setItem('tokenArray', JSON.stringify(Store.tokenArray));\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        var key = e.keyCode || e.charCode;\r\n        var selection = window.getSelection();\r\n\r\n        if(selection.toString().length > 0 && Store.contentArray){\r\n            try{\r\n                if(key === 46 || key === 8){\r\n                    // BACKSPACE OR DELETE TO CLEAR SELECTION\r\n                    let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n                    let anchor_index = parseInt(selection.anchorNode.parentElement.dataset.index);\r\n                    let anchor_offset = selection.anchorOffset;\r\n                    let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n                    let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n                    let focus_offset = selection.focusOffset;\r\n        \r\n                    if(focus_line < anchor_line) [anchor_line, focus_line] = [focus_line, anchor_line];\r\n\r\n                    let i1 = 0;\r\n                    for(let i = 0; i < anchor_index; i++){\r\n                        i1 += Store.tokenArray[anchor_line][i][0].length;\r\n                    }\r\n                    i1 += anchor_offset;\r\n        \r\n                    let i2 = 0;\r\n                    for(let i = 0; i < focus_index; i++){\r\n                        i2 += Store.tokenArray[focus_line][i][0].length;\r\n                    }\r\n                    i2 += focus_offset;\r\n        \r\n                    clearSelection(anchor_line, i1, focus_line, i2);\r\n                    Store.setCursorLine(anchor_line);\r\n                    Store.setCursorIndex(i1);\r\n                    Store.setCursorOffset(findWidthofChar(Store.contentArray[anchor_line].slice(0, i1)));\r\n                    e.stopImmediatePropagation();\r\n                }\r\n                else if(key === 9){\r\n                    if(e.shiftKey){\r\n                        // Shift + Tab TO BACK INDENT SELECTION\r\n                        let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n                        let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n                        let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n                        let focus_offset = selection.focusOffset;\r\n\r\n                        if(focus_line < anchor_line) [anchor_line, focus_line] = [focus_line, anchor_line];\r\n        \r\n                        let i2 = 0;\r\n                        for(let i = 0; i < focus_index; i++){\r\n                            i2 += Store.tokenArray[focus_line][i][0].length;\r\n                        }\r\n                        i2 += focus_offset;\r\n    \r\n                        var content, count, s, l;\r\n    \r\n                        for(let line = anchor_line; line <= focus_line; line++){\r\n                            content = Store.contentArray[line];\r\n                            l = content.length;\r\n                            content = content.trimLeft();\r\n                            count = (l - content.length);\r\n                            if(count % Store.tabWidth === 0) count -= 4;\r\n                            else count = count - (count % Store.tabWidth);\r\n                            s = \" \".repeat(count);\r\n                            console.log(count);\r\n                            Store.tokenArray[line] = tokenizer.tokenize(s + content);\r\n                            Store.contentArray[line] = s + content;\r\n                        }\r\n        \r\n                        Store.setCursorLine(focus_line);\r\n                        i2 -= (l - content.length);\r\n                        Store.setCursorIndex(i2);\r\n                        Store.setCursorOffset(findWidthofChar(Store.contentArray[focus_line].slice(0, i2)));\r\n                    }\r\n                    else{\r\n                        // Tab TO INDENT SELECTION\r\n                        console.log(selection);\r\n                        let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n                        let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n                        let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n                        let focus_offset = selection.focusOffset;\r\n\r\n                        if(focus_line < anchor_line) [anchor_line, focus_line] = [focus_line, anchor_line];\r\n        \r\n                        let i2 = 0;\r\n                        for(let i = 0; i < focus_index; i++){\r\n                            i2 += Store.tokenArray[focus_line][i][0].length;\r\n                        }\r\n                        i2 += focus_offset;\r\n        \r\n                        let s = \" \".repeat(Store.tabWidth);\r\n                        for(let line = anchor_line; line <= focus_line; line++){\r\n                            Store.tokenArray[line] = tokenizer.tokenize(s + Store.contentArray[line]);\r\n                            Store.contentArray[line] = s + Store.contentArray[line];\r\n                        }\r\n    \r\n                        console.log(Store.contentArray[focus_line], focus_line);\r\n        \r\n                        Store.setCursorLine(focus_line);\r\n                        Store.setCursorIndex(i2 + Store.tabWidth);\r\n                        Store.setCursorOffset(findWidthofChar(s + Store.contentArray[focus_line].slice(0, i2)));\r\n                    }\r\n                    if (window.getSelection().empty) {  \r\n                        // Chrome\r\n                        window.getSelection().empty();\r\n                    } else if (window.getSelection().removeAllRanges) {  \r\n                        // Firefox\r\n                        window.getSelection().removeAllRanges();\r\n                    }\r\n            \r\n                    updateStorage();\r\n                    e.stopImmediatePropagation();\r\n                }\r\n            }catch{\r\n                //console.log(\"corrupted selection\");\r\n            }\r\n        }\r\n    })\r\n\r\n    const clearSelection = (x1, y1, x2, y2) => {\r\n        let c1 = Store.contentArray[x1].slice(0, y1);\r\n        let c2 = Store.contentArray[x2].slice(y2);\r\n\r\n        Store.contentArray.splice(x1+1, x2 - x1);\r\n        Store.tokenArray.splice(x1+1, x2 - x1);\r\n        Store.setLineCount(Store.lineCount - x2 + x1);\r\n\r\n        Store.contentArray[x1] = c1 + c2;\r\n        Store.tokenArray[x1] = tokenizer.tokenize(c1 + c2);\r\n\r\n        if (window.getSelection().empty) {  \r\n            // Chrome\r\n            window.getSelection().empty();\r\n        } else if (window.getSelection().removeAllRanges) {  \r\n            // Firefox\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n\r\n        updateStorage();\r\n    }\r\n\r\n    const cutToClipboard = (e) => {\r\n        const [anchor_line, anchor_content_index, focus_line, focus_content_index] = copyToClipboard(e);\r\n        clearSelection(anchor_line, anchor_content_index, focus_line, focus_content_index);\r\n        Store.setCursorLine(anchor_line);\r\n        Store.setCursorIndex(anchor_content_index);\r\n        Store.setCursorOffset(findWidthofChar(Store.contentArray[anchor_line].slice(0, anchor_content_index)));\r\n        document.getElementById('edit_textarea').focus();\r\n    }\r\n\r\n    const copyToClipboard = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let selection = window.getSelection();\r\n        if(selection.toString().length > 0){\r\n            let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n            let anchor_index = parseInt(selection.anchorNode.parentElement.dataset.index);\r\n            let anchor_offset = selection.anchorOffset;\r\n            let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n            let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n            let focus_offset = selection.focusOffset;\r\n\r\n            if((focus_line < anchor_line) || (focus_line === anchor_line && focus_index < anchor_index)){\r\n                [anchor_line, focus_line] = [focus_line, anchor_line];\r\n                [anchor_index, focus_index] = [focus_index, anchor_index];\r\n                [anchor_offset, focus_offset] = [focus_offset, anchor_offset];\r\n            }\r\n\r\n            let copiedText = \"\";\r\n            copiedText += Store.tokenArray[anchor_line][anchor_index][0].slice(anchor_offset);\r\n            for(var i = anchor_index + 1; i < Store.tokenArray[anchor_line].length; i++){\r\n                copiedText += Store.tokenArray[anchor_line][i][0];\r\n            }\r\n            let anchor_content_index = Store.contentArray[anchor_line].length - copiedText.length;\r\n            copiedText += \"\\n\";\r\n            for(let i = anchor_line + 1; i < focus_line; i++){\r\n                copiedText += Store.contentArray[i];\r\n                copiedText += \"\\n\";\r\n            }\r\n            let focus_content_index = 0;\r\n            for(let i = 0; i < focus_index; i++){\r\n                focus_content_index += Store.tokenArray[focus_line][i][0].length;\r\n                copiedText += Store.tokenArray[focus_line][i][0];\r\n            }\r\n            copiedText += Store.tokenArray[focus_line][focus_index][0].slice(0, focus_offset);\r\n            focus_content_index += focus_offset;\r\n\r\n            e.clipboardData.setData('text/plain', copiedText);\r\n            return [anchor_line, anchor_content_index, focus_line, focus_content_index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const verbose = () => {\r\n        console.log(Store.cursorIndex);\r\n        console.log(Store.cursorOffset);\r\n        console.log(Store.cursorLine);\r\n    }\r\n\r\n    const keyHandler = (e) => {\r\n        var key = e.keyCode || e.charCode;\r\n\r\n        if(key === 70 && e.ctrlKey){\r\n            // Ctrl + F FIND FUNCTIONALITY\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            let search = document.getElementById('text_search');\r\n            search.classList.remove('text_search_animation_rev');\r\n            search.classList.add('text_search_animation');\r\n        }\r\n        else if(key === 27){\r\n            // ESC\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            let highlights = document.getElementsByClassName('text_search_highlight');\r\n            while(highlights.length > 0){\r\n                highlights[0].remove();\r\n            }\r\n\r\n            let canvas = document.getElementById('search_overview');\r\n            canvas.style.display=\"none\";\r\n            let context = canvas.getContext('2d');\r\n            context.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            let search = document.getElementById('text_search');\r\n            search.classList.remove('text_search_animation');\r\n            search.classList.add('text_search_animation_rev');\r\n        }\r\n        else if(key === 83 && e.ctrlKey){\r\n            // Ctrl + S FOR SAVE\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var codeString = \"\";\r\n            var line;\r\n            for(line of Store.contentArray){\r\n                codeString += line + \"\\n\";\r\n            }\r\n            downloadFile(codeString, \"sush.c\");\r\n        }\r\n        else if(key === 46 && e.ctrlKey){\r\n            // Ctrl + Del FOR CLEARING\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            localStorage.removeItem('contentArray');\r\n            localStorage.removeItem('tokenArray');\r\n            initiateState(Store);\r\n            Store.setCursorLine(0);\r\n            Store.setCursorLine(0);\r\n        }\r\n        else if(key === 46 || key === 8){\r\n            /*if(selected){\r\n                let selection = window.getSelection();\r\n                let anchor_line = parseInt(selection.anchorNode.parentElement.parentElement.dataset.line);\r\n                let anchor_index = parseInt(selection.anchorNode.parentElement.dataset.index);\r\n                let anchor_offset = selection.anchorOffset;\r\n                let focus_line = parseInt(selection.focusNode.parentElement.parentElement.dataset.line);\r\n                let focus_index = parseInt(selection.focusNode.parentElement.dataset.index);\r\n                let focus_offset = selection.focusOffset;\r\n\r\n                let i1 = 0;\r\n                for(let i = 0; i < anchor_index - 1; i++){\r\n                    i1 += Store.tokenArray[anchor_line][i][0].length;\r\n                }\r\n                i1 += anchor_offset;\r\n\r\n                let i2 = 0;\r\n                for(let i = 0; i < focus_index; i++){\r\n                    i2 += Store.tokenArray[focus_line][i][0];\r\n                }\r\n                i2 += focus_offset;\r\n\r\n                clearSelection(anchor_line, i1, focus_line, i2);\r\n            }*/\r\n        }\r\n    }\r\n\r\n    const scrollX = (e) => {\r\n        let lineMarker = document.getElementById('editor_line_marker_wrapper');\r\n        lineMarker.style.left = e.target.scrollLeft + \"px\";\r\n    }\r\n\r\n    var lines = Array.from({length: Store.lineCount}, (_, i) => i)\r\n    return (\r\n        <div className=\"editor_wrapper\" id=\"editor_wrapper\" onScroll={scrollX}>\r\n            <div className=\"editor_line_marker_wrapper\" id=\"editor_line_marker_wrapper\">\r\n                {lines.map((val, index) => {\r\n                    return (\r\n                        <LineMarker \r\n                            key={index} \r\n                            number={val} \r\n                            isContractible={false} \r\n                            isContracted= {false}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"editor_scroll_wrapper\">\r\n                <div \r\n                    id=\"editor_code_wrapper\"\r\n                    className=\"editor_code_wrapper\" \r\n                    onCopy={copyToClipboard} \r\n                    onCut={cutToClipboard} \r\n                    onKeyDown={keyHandler}\r\n                >\r\n                    <TextSearch />\r\n                    <CodeInput />\r\n                    {lines.map((val, index) => {\r\n                        return (\r\n                            <CodeLine \r\n                                key={index}\r\n                                line={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <canvas id=\"search_overview\" width=\"6\" height=\"400\">\r\n            </canvas>\r\n            <button onClick={verbose} style={{display: \"none\"}}>Verbose</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Editor;","import Container from './state/state.js';\r\nimport Editor from \"./editor\";\r\n\r\nconst Wrapper = () => {\r\n    return (\r\n    \t<Container.Provider>\r\n\t        <Editor />\r\n\t    </Container.Provider>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import './App.css';\nimport Wrapper from \"./Editor/container\";\n\n\nfunction App() {\n  localStorage.setItem(\"language\", \"c\");\n    return (\n      <div className=\"App\">\n        <Wrapper />\n        <span id=\"text_width_finder\"></span>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}